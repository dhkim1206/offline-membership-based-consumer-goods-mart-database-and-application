//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DBP_FINAL_5532437 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private ADMINDataTable tableADMIN;
        
        private PRODUCTSDataTable tablePRODUCTS;
        
        private REVIEWDataTable tableREVIEW;
        
        private SELLERDataTable tableSELLER;
        
        private USERSDataTable tableUSERS;
        
        private BASKETDataTable tableBASKET;
        
        private ORDERD_PRODDataTable tableORDERD_PROD;
        
        private NOTICEDataTable tableNOTICE;
        
        private STOREDataTable tableSTORE;
        
        private VIEW3DataTable tableVIEW3;
        
        private NEWPRODDataTable tableNEWPROD;
        
        private PROD_REFUNDDataTable tablePROD_REFUND;
        
        private global::System.Data.DataRelation relationBASKET_FK2;
        
        private global::System.Data.DataRelation relationBASKET_FK3;
        
        private global::System.Data.DataRelation relationORDERD_PROD_FK1;
        
        private global::System.Data.DataRelation relationORDERD_PROD_FK3;
        
        private global::System.Data.DataRelation relationSELLER_FK1;
        
        private global::System.Data.DataRelation relationBASKET_FK1;
        
        private global::System.Data.DataRelation relationORDERD_PROD_FK2;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ADMIN"] != null)) {
                    base.Tables.Add(new ADMINDataTable(ds.Tables["ADMIN"]));
                }
                if ((ds.Tables["PRODUCTS"] != null)) {
                    base.Tables.Add(new PRODUCTSDataTable(ds.Tables["PRODUCTS"]));
                }
                if ((ds.Tables["REVIEW"] != null)) {
                    base.Tables.Add(new REVIEWDataTable(ds.Tables["REVIEW"]));
                }
                if ((ds.Tables["SELLER"] != null)) {
                    base.Tables.Add(new SELLERDataTable(ds.Tables["SELLER"]));
                }
                if ((ds.Tables["USERS"] != null)) {
                    base.Tables.Add(new USERSDataTable(ds.Tables["USERS"]));
                }
                if ((ds.Tables["BASKET"] != null)) {
                    base.Tables.Add(new BASKETDataTable(ds.Tables["BASKET"]));
                }
                if ((ds.Tables["ORDERD_PROD"] != null)) {
                    base.Tables.Add(new ORDERD_PRODDataTable(ds.Tables["ORDERD_PROD"]));
                }
                if ((ds.Tables["NOTICE"] != null)) {
                    base.Tables.Add(new NOTICEDataTable(ds.Tables["NOTICE"]));
                }
                if ((ds.Tables["STORE"] != null)) {
                    base.Tables.Add(new STOREDataTable(ds.Tables["STORE"]));
                }
                if ((ds.Tables["VIEW3"] != null)) {
                    base.Tables.Add(new VIEW3DataTable(ds.Tables["VIEW3"]));
                }
                if ((ds.Tables["NEWPROD"] != null)) {
                    base.Tables.Add(new NEWPRODDataTable(ds.Tables["NEWPROD"]));
                }
                if ((ds.Tables["PROD_REFUND"] != null)) {
                    base.Tables.Add(new PROD_REFUNDDataTable(ds.Tables["PROD_REFUND"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ADMINDataTable ADMIN {
            get {
                return this.tableADMIN;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PRODUCTSDataTable PRODUCTS {
            get {
                return this.tablePRODUCTS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public REVIEWDataTable REVIEW {
            get {
                return this.tableREVIEW;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SELLERDataTable SELLER {
            get {
                return this.tableSELLER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public USERSDataTable USERS {
            get {
                return this.tableUSERS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BASKETDataTable BASKET {
            get {
                return this.tableBASKET;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ORDERD_PRODDataTable ORDERD_PROD {
            get {
                return this.tableORDERD_PROD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NOTICEDataTable NOTICE {
            get {
                return this.tableNOTICE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public STOREDataTable STORE {
            get {
                return this.tableSTORE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VIEW3DataTable VIEW3 {
            get {
                return this.tableVIEW3;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NEWPRODDataTable NEWPROD {
            get {
                return this.tableNEWPROD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PROD_REFUNDDataTable PROD_REFUND {
            get {
                return this.tablePROD_REFUND;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ADMIN"] != null)) {
                    base.Tables.Add(new ADMINDataTable(ds.Tables["ADMIN"]));
                }
                if ((ds.Tables["PRODUCTS"] != null)) {
                    base.Tables.Add(new PRODUCTSDataTable(ds.Tables["PRODUCTS"]));
                }
                if ((ds.Tables["REVIEW"] != null)) {
                    base.Tables.Add(new REVIEWDataTable(ds.Tables["REVIEW"]));
                }
                if ((ds.Tables["SELLER"] != null)) {
                    base.Tables.Add(new SELLERDataTable(ds.Tables["SELLER"]));
                }
                if ((ds.Tables["USERS"] != null)) {
                    base.Tables.Add(new USERSDataTable(ds.Tables["USERS"]));
                }
                if ((ds.Tables["BASKET"] != null)) {
                    base.Tables.Add(new BASKETDataTable(ds.Tables["BASKET"]));
                }
                if ((ds.Tables["ORDERD_PROD"] != null)) {
                    base.Tables.Add(new ORDERD_PRODDataTable(ds.Tables["ORDERD_PROD"]));
                }
                if ((ds.Tables["NOTICE"] != null)) {
                    base.Tables.Add(new NOTICEDataTable(ds.Tables["NOTICE"]));
                }
                if ((ds.Tables["STORE"] != null)) {
                    base.Tables.Add(new STOREDataTable(ds.Tables["STORE"]));
                }
                if ((ds.Tables["VIEW3"] != null)) {
                    base.Tables.Add(new VIEW3DataTable(ds.Tables["VIEW3"]));
                }
                if ((ds.Tables["NEWPROD"] != null)) {
                    base.Tables.Add(new NEWPRODDataTable(ds.Tables["NEWPROD"]));
                }
                if ((ds.Tables["PROD_REFUND"] != null)) {
                    base.Tables.Add(new PROD_REFUNDDataTable(ds.Tables["PROD_REFUND"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableADMIN = ((ADMINDataTable)(base.Tables["ADMIN"]));
            if ((initTable == true)) {
                if ((this.tableADMIN != null)) {
                    this.tableADMIN.InitVars();
                }
            }
            this.tablePRODUCTS = ((PRODUCTSDataTable)(base.Tables["PRODUCTS"]));
            if ((initTable == true)) {
                if ((this.tablePRODUCTS != null)) {
                    this.tablePRODUCTS.InitVars();
                }
            }
            this.tableREVIEW = ((REVIEWDataTable)(base.Tables["REVIEW"]));
            if ((initTable == true)) {
                if ((this.tableREVIEW != null)) {
                    this.tableREVIEW.InitVars();
                }
            }
            this.tableSELLER = ((SELLERDataTable)(base.Tables["SELLER"]));
            if ((initTable == true)) {
                if ((this.tableSELLER != null)) {
                    this.tableSELLER.InitVars();
                }
            }
            this.tableUSERS = ((USERSDataTable)(base.Tables["USERS"]));
            if ((initTable == true)) {
                if ((this.tableUSERS != null)) {
                    this.tableUSERS.InitVars();
                }
            }
            this.tableBASKET = ((BASKETDataTable)(base.Tables["BASKET"]));
            if ((initTable == true)) {
                if ((this.tableBASKET != null)) {
                    this.tableBASKET.InitVars();
                }
            }
            this.tableORDERD_PROD = ((ORDERD_PRODDataTable)(base.Tables["ORDERD_PROD"]));
            if ((initTable == true)) {
                if ((this.tableORDERD_PROD != null)) {
                    this.tableORDERD_PROD.InitVars();
                }
            }
            this.tableNOTICE = ((NOTICEDataTable)(base.Tables["NOTICE"]));
            if ((initTable == true)) {
                if ((this.tableNOTICE != null)) {
                    this.tableNOTICE.InitVars();
                }
            }
            this.tableSTORE = ((STOREDataTable)(base.Tables["STORE"]));
            if ((initTable == true)) {
                if ((this.tableSTORE != null)) {
                    this.tableSTORE.InitVars();
                }
            }
            this.tableVIEW3 = ((VIEW3DataTable)(base.Tables["VIEW3"]));
            if ((initTable == true)) {
                if ((this.tableVIEW3 != null)) {
                    this.tableVIEW3.InitVars();
                }
            }
            this.tableNEWPROD = ((NEWPRODDataTable)(base.Tables["NEWPROD"]));
            if ((initTable == true)) {
                if ((this.tableNEWPROD != null)) {
                    this.tableNEWPROD.InitVars();
                }
            }
            this.tablePROD_REFUND = ((PROD_REFUNDDataTable)(base.Tables["PROD_REFUND"]));
            if ((initTable == true)) {
                if ((this.tablePROD_REFUND != null)) {
                    this.tablePROD_REFUND.InitVars();
                }
            }
            this.relationBASKET_FK2 = this.Relations["BASKET_FK2"];
            this.relationBASKET_FK3 = this.Relations["BASKET_FK3"];
            this.relationORDERD_PROD_FK1 = this.Relations["ORDERD_PROD_FK1"];
            this.relationORDERD_PROD_FK3 = this.Relations["ORDERD_PROD_FK3"];
            this.relationSELLER_FK1 = this.Relations["SELLER_FK1"];
            this.relationBASKET_FK1 = this.Relations["BASKET_FK1"];
            this.relationORDERD_PROD_FK2 = this.Relations["ORDERD_PROD_FK2"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableADMIN = new ADMINDataTable();
            base.Tables.Add(this.tableADMIN);
            this.tablePRODUCTS = new PRODUCTSDataTable();
            base.Tables.Add(this.tablePRODUCTS);
            this.tableREVIEW = new REVIEWDataTable();
            base.Tables.Add(this.tableREVIEW);
            this.tableSELLER = new SELLERDataTable();
            base.Tables.Add(this.tableSELLER);
            this.tableUSERS = new USERSDataTable();
            base.Tables.Add(this.tableUSERS);
            this.tableBASKET = new BASKETDataTable();
            base.Tables.Add(this.tableBASKET);
            this.tableORDERD_PROD = new ORDERD_PRODDataTable();
            base.Tables.Add(this.tableORDERD_PROD);
            this.tableNOTICE = new NOTICEDataTable();
            base.Tables.Add(this.tableNOTICE);
            this.tableSTORE = new STOREDataTable();
            base.Tables.Add(this.tableSTORE);
            this.tableVIEW3 = new VIEW3DataTable();
            base.Tables.Add(this.tableVIEW3);
            this.tableNEWPROD = new NEWPRODDataTable();
            base.Tables.Add(this.tableNEWPROD);
            this.tablePROD_REFUND = new PROD_REFUNDDataTable();
            base.Tables.Add(this.tablePROD_REFUND);
            this.relationBASKET_FK2 = new global::System.Data.DataRelation("BASKET_FK2", new global::System.Data.DataColumn[] {
                        this.tableUSERS.USER_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableBASKET.USER_IDColumn}, false);
            this.Relations.Add(this.relationBASKET_FK2);
            this.relationBASKET_FK3 = new global::System.Data.DataRelation("BASKET_FK3", new global::System.Data.DataColumn[] {
                        this.tablePRODUCTS.PROD_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableBASKET.PROD_IDColumn}, false);
            this.Relations.Add(this.relationBASKET_FK3);
            this.relationORDERD_PROD_FK1 = new global::System.Data.DataRelation("ORDERD_PROD_FK1", new global::System.Data.DataColumn[] {
                        this.tableUSERS.USER_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableORDERD_PROD.USER_IDColumn}, false);
            this.Relations.Add(this.relationORDERD_PROD_FK1);
            this.relationORDERD_PROD_FK3 = new global::System.Data.DataRelation("ORDERD_PROD_FK3", new global::System.Data.DataColumn[] {
                        this.tablePRODUCTS.PROD_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableORDERD_PROD.PROD_IDColumn}, false);
            this.Relations.Add(this.relationORDERD_PROD_FK3);
            this.relationSELLER_FK1 = new global::System.Data.DataRelation("SELLER_FK1", new global::System.Data.DataColumn[] {
                        this.tableSTORE.STOR_NAMEColumn}, new global::System.Data.DataColumn[] {
                        this.tableSELLER.STOR_NAMEColumn}, false);
            this.Relations.Add(this.relationSELLER_FK1);
            this.relationBASKET_FK1 = new global::System.Data.DataRelation("BASKET_FK1", new global::System.Data.DataColumn[] {
                        this.tableSTORE.STOR_NAMEColumn}, new global::System.Data.DataColumn[] {
                        this.tableBASKET.STOR_NAMEColumn}, false);
            this.Relations.Add(this.relationBASKET_FK1);
            this.relationORDERD_PROD_FK2 = new global::System.Data.DataRelation("ORDERD_PROD_FK2", new global::System.Data.DataColumn[] {
                        this.tableSTORE.STOR_NAMEColumn}, new global::System.Data.DataColumn[] {
                        this.tableORDERD_PROD.STOR_NAMEColumn}, false);
            this.Relations.Add(this.relationORDERD_PROD_FK2);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeADMIN() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializePRODUCTS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeREVIEW() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSELLER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeUSERS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeBASKET() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeORDERD_PROD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeNOTICE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSTORE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeVIEW3() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeNEWPROD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializePROD_REFUND() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ADMINRowChangeEventHandler(object sender, ADMINRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void PRODUCTSRowChangeEventHandler(object sender, PRODUCTSRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void REVIEWRowChangeEventHandler(object sender, REVIEWRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SELLERRowChangeEventHandler(object sender, SELLERRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void USERSRowChangeEventHandler(object sender, USERSRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void BASKETRowChangeEventHandler(object sender, BASKETRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ORDERD_PRODRowChangeEventHandler(object sender, ORDERD_PRODRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void NOTICERowChangeEventHandler(object sender, NOTICERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void STORERowChangeEventHandler(object sender, STORERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void VIEW3RowChangeEventHandler(object sender, VIEW3RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void NEWPRODRowChangeEventHandler(object sender, NEWPRODRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void PROD_REFUNDRowChangeEventHandler(object sender, PROD_REFUNDRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ADMINDataTable : global::System.Data.TypedTableBase<ADMINRow> {
            
            private global::System.Data.DataColumn columnADMIN_ID;
            
            private global::System.Data.DataColumn columnADMIN_PASSWORD;
            
            private global::System.Data.DataColumn columnADMIN_NAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ADMINDataTable() {
                this.TableName = "ADMIN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ADMINDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ADMINDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ADMIN_IDColumn {
                get {
                    return this.columnADMIN_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ADMIN_PASSWORDColumn {
                get {
                    return this.columnADMIN_PASSWORD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ADMIN_NAMEColumn {
                get {
                    return this.columnADMIN_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ADMINRow this[int index] {
                get {
                    return ((ADMINRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ADMINRowChangeEventHandler ADMINRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ADMINRowChangeEventHandler ADMINRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ADMINRowChangeEventHandler ADMINRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ADMINRowChangeEventHandler ADMINRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddADMINRow(ADMINRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ADMINRow AddADMINRow(string ADMIN_ID, string ADMIN_PASSWORD, string ADMIN_NAME) {
                ADMINRow rowADMINRow = ((ADMINRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ADMIN_ID,
                        ADMIN_PASSWORD,
                        ADMIN_NAME};
                rowADMINRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowADMINRow);
                return rowADMINRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ADMINRow FindByADMIN_ID(string ADMIN_ID) {
                return ((ADMINRow)(this.Rows.Find(new object[] {
                            ADMIN_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ADMINDataTable cln = ((ADMINDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ADMINDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnADMIN_ID = base.Columns["ADMIN_ID"];
                this.columnADMIN_PASSWORD = base.Columns["ADMIN_PASSWORD"];
                this.columnADMIN_NAME = base.Columns["ADMIN_NAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnADMIN_ID = new global::System.Data.DataColumn("ADMIN_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADMIN_ID);
                this.columnADMIN_PASSWORD = new global::System.Data.DataColumn("ADMIN_PASSWORD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADMIN_PASSWORD);
                this.columnADMIN_NAME = new global::System.Data.DataColumn("ADMIN_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADMIN_NAME);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnADMIN_ID}, true));
                this.columnADMIN_ID.AllowDBNull = false;
                this.columnADMIN_ID.Unique = true;
                this.columnADMIN_ID.MaxLength = 50;
                this.columnADMIN_PASSWORD.AllowDBNull = false;
                this.columnADMIN_PASSWORD.MaxLength = 50;
                this.columnADMIN_NAME.AllowDBNull = false;
                this.columnADMIN_NAME.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ADMINRow NewADMINRow() {
                return ((ADMINRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ADMINRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ADMINRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ADMINRowChanged != null)) {
                    this.ADMINRowChanged(this, new ADMINRowChangeEvent(((ADMINRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ADMINRowChanging != null)) {
                    this.ADMINRowChanging(this, new ADMINRowChangeEvent(((ADMINRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ADMINRowDeleted != null)) {
                    this.ADMINRowDeleted(this, new ADMINRowChangeEvent(((ADMINRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ADMINRowDeleting != null)) {
                    this.ADMINRowDeleting(this, new ADMINRowChangeEvent(((ADMINRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveADMINRow(ADMINRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ADMINDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PRODUCTSDataTable : global::System.Data.TypedTableBase<PRODUCTSRow> {
            
            private global::System.Data.DataColumn columnPROD_ID;
            
            private global::System.Data.DataColumn columnSTOR_NAME;
            
            private global::System.Data.DataColumn columnPROD_NAME;
            
            private global::System.Data.DataColumn columnPROD_KIND;
            
            private global::System.Data.DataColumn columnPROD_PRICE;
            
            private global::System.Data.DataColumn columnPROD_COUNT;
            
            private global::System.Data.DataColumn columnORDER_COUNT;
            
            private global::System.Data.DataColumn columnREFUND_COUNT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PRODUCTSDataTable() {
                this.TableName = "PRODUCTS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PRODUCTSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected PRODUCTSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROD_IDColumn {
                get {
                    return this.columnPROD_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STOR_NAMEColumn {
                get {
                    return this.columnSTOR_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROD_NAMEColumn {
                get {
                    return this.columnPROD_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROD_KINDColumn {
                get {
                    return this.columnPROD_KIND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROD_PRICEColumn {
                get {
                    return this.columnPROD_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROD_COUNTColumn {
                get {
                    return this.columnPROD_COUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ORDER_COUNTColumn {
                get {
                    return this.columnORDER_COUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REFUND_COUNTColumn {
                get {
                    return this.columnREFUND_COUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PRODUCTSRow this[int index] {
                get {
                    return ((PRODUCTSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PRODUCTSRowChangeEventHandler PRODUCTSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PRODUCTSRowChangeEventHandler PRODUCTSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PRODUCTSRowChangeEventHandler PRODUCTSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PRODUCTSRowChangeEventHandler PRODUCTSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddPRODUCTSRow(PRODUCTSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PRODUCTSRow AddPRODUCTSRow(string PROD_ID, string STOR_NAME, string PROD_NAME, string PROD_KIND, decimal PROD_PRICE, string PROD_COUNT, decimal ORDER_COUNT, decimal REFUND_COUNT) {
                PRODUCTSRow rowPRODUCTSRow = ((PRODUCTSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PROD_ID,
                        STOR_NAME,
                        PROD_NAME,
                        PROD_KIND,
                        PROD_PRICE,
                        PROD_COUNT,
                        ORDER_COUNT,
                        REFUND_COUNT};
                rowPRODUCTSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPRODUCTSRow);
                return rowPRODUCTSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PRODUCTSRow FindByPROD_ID(string PROD_ID) {
                return ((PRODUCTSRow)(this.Rows.Find(new object[] {
                            PROD_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PRODUCTSDataTable cln = ((PRODUCTSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PRODUCTSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnPROD_ID = base.Columns["PROD_ID"];
                this.columnSTOR_NAME = base.Columns["STOR_NAME"];
                this.columnPROD_NAME = base.Columns["PROD_NAME"];
                this.columnPROD_KIND = base.Columns["PROD_KIND"];
                this.columnPROD_PRICE = base.Columns["PROD_PRICE"];
                this.columnPROD_COUNT = base.Columns["PROD_COUNT"];
                this.columnORDER_COUNT = base.Columns["ORDER_COUNT"];
                this.columnREFUND_COUNT = base.Columns["REFUND_COUNT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnPROD_ID = new global::System.Data.DataColumn("PROD_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_ID);
                this.columnSTOR_NAME = new global::System.Data.DataColumn("STOR_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOR_NAME);
                this.columnPROD_NAME = new global::System.Data.DataColumn("PROD_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_NAME);
                this.columnPROD_KIND = new global::System.Data.DataColumn("PROD_KIND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_KIND);
                this.columnPROD_PRICE = new global::System.Data.DataColumn("PROD_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_PRICE);
                this.columnPROD_COUNT = new global::System.Data.DataColumn("PROD_COUNT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_COUNT);
                this.columnORDER_COUNT = new global::System.Data.DataColumn("ORDER_COUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_COUNT);
                this.columnREFUND_COUNT = new global::System.Data.DataColumn("REFUND_COUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFUND_COUNT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPROD_ID}, true));
                this.columnPROD_ID.AllowDBNull = false;
                this.columnPROD_ID.Unique = true;
                this.columnPROD_ID.MaxLength = 50;
                this.columnSTOR_NAME.AllowDBNull = false;
                this.columnSTOR_NAME.MaxLength = 50;
                this.columnPROD_NAME.AllowDBNull = false;
                this.columnPROD_NAME.MaxLength = 50;
                this.columnPROD_KIND.AllowDBNull = false;
                this.columnPROD_KIND.MaxLength = 50;
                this.columnPROD_PRICE.AllowDBNull = false;
                this.columnPROD_COUNT.AllowDBNull = false;
                this.columnPROD_COUNT.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PRODUCTSRow NewPRODUCTSRow() {
                return ((PRODUCTSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PRODUCTSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PRODUCTSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PRODUCTSRowChanged != null)) {
                    this.PRODUCTSRowChanged(this, new PRODUCTSRowChangeEvent(((PRODUCTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PRODUCTSRowChanging != null)) {
                    this.PRODUCTSRowChanging(this, new PRODUCTSRowChangeEvent(((PRODUCTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PRODUCTSRowDeleted != null)) {
                    this.PRODUCTSRowDeleted(this, new PRODUCTSRowChangeEvent(((PRODUCTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PRODUCTSRowDeleting != null)) {
                    this.PRODUCTSRowDeleting(this, new PRODUCTSRowChangeEvent(((PRODUCTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovePRODUCTSRow(PRODUCTSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PRODUCTSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class REVIEWDataTable : global::System.Data.TypedTableBase<REVIEWRow> {
            
            private global::System.Data.DataColumn columnREVIEW_ID;
            
            private global::System.Data.DataColumn columnPROD_ID;
            
            private global::System.Data.DataColumn columnREVIEW_TITLE;
            
            private global::System.Data.DataColumn columnREVIEW_CONTENT;
            
            private global::System.Data.DataColumn columnUSER_ID;
            
            private global::System.Data.DataColumn columnREVIEW_DATE;
            
            private global::System.Data.DataColumn columnUSER_NAME;
            
            private global::System.Data.DataColumn columnPROD_NAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REVIEWDataTable() {
                this.TableName = "REVIEW";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal REVIEWDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected REVIEWDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REVIEW_IDColumn {
                get {
                    return this.columnREVIEW_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROD_IDColumn {
                get {
                    return this.columnPROD_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REVIEW_TITLEColumn {
                get {
                    return this.columnREVIEW_TITLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REVIEW_CONTENTColumn {
                get {
                    return this.columnREVIEW_CONTENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_IDColumn {
                get {
                    return this.columnUSER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REVIEW_DATEColumn {
                get {
                    return this.columnREVIEW_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_NAMEColumn {
                get {
                    return this.columnUSER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROD_NAMEColumn {
                get {
                    return this.columnPROD_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REVIEWRow this[int index] {
                get {
                    return ((REVIEWRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event REVIEWRowChangeEventHandler REVIEWRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event REVIEWRowChangeEventHandler REVIEWRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event REVIEWRowChangeEventHandler REVIEWRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event REVIEWRowChangeEventHandler REVIEWRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddREVIEWRow(REVIEWRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REVIEWRow AddREVIEWRow(string REVIEW_ID, string PROD_ID, string REVIEW_TITLE, string REVIEW_CONTENT, string USER_ID, System.DateTime REVIEW_DATE, string USER_NAME, string PROD_NAME) {
                REVIEWRow rowREVIEWRow = ((REVIEWRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        REVIEW_ID,
                        PROD_ID,
                        REVIEW_TITLE,
                        REVIEW_CONTENT,
                        USER_ID,
                        REVIEW_DATE,
                        USER_NAME,
                        PROD_NAME};
                rowREVIEWRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowREVIEWRow);
                return rowREVIEWRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REVIEWRow FindByREVIEW_ID(string REVIEW_ID) {
                return ((REVIEWRow)(this.Rows.Find(new object[] {
                            REVIEW_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                REVIEWDataTable cln = ((REVIEWDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new REVIEWDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnREVIEW_ID = base.Columns["REVIEW_ID"];
                this.columnPROD_ID = base.Columns["PROD_ID"];
                this.columnREVIEW_TITLE = base.Columns["REVIEW_TITLE"];
                this.columnREVIEW_CONTENT = base.Columns["REVIEW_CONTENT"];
                this.columnUSER_ID = base.Columns["USER_ID"];
                this.columnREVIEW_DATE = base.Columns["REVIEW_DATE"];
                this.columnUSER_NAME = base.Columns["USER_NAME"];
                this.columnPROD_NAME = base.Columns["PROD_NAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnREVIEW_ID = new global::System.Data.DataColumn("REVIEW_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREVIEW_ID);
                this.columnPROD_ID = new global::System.Data.DataColumn("PROD_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_ID);
                this.columnREVIEW_TITLE = new global::System.Data.DataColumn("REVIEW_TITLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREVIEW_TITLE);
                this.columnREVIEW_CONTENT = new global::System.Data.DataColumn("REVIEW_CONTENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREVIEW_CONTENT);
                this.columnUSER_ID = new global::System.Data.DataColumn("USER_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_ID);
                this.columnREVIEW_DATE = new global::System.Data.DataColumn("REVIEW_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREVIEW_DATE);
                this.columnUSER_NAME = new global::System.Data.DataColumn("USER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_NAME);
                this.columnPROD_NAME = new global::System.Data.DataColumn("PROD_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_NAME);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnREVIEW_ID}, true));
                this.columnREVIEW_ID.AllowDBNull = false;
                this.columnREVIEW_ID.Unique = true;
                this.columnREVIEW_ID.MaxLength = 50;
                this.columnPROD_ID.AllowDBNull = false;
                this.columnPROD_ID.MaxLength = 50;
                this.columnREVIEW_TITLE.AllowDBNull = false;
                this.columnREVIEW_TITLE.MaxLength = 50;
                this.columnREVIEW_CONTENT.AllowDBNull = false;
                this.columnREVIEW_CONTENT.MaxLength = 50;
                this.columnUSER_ID.AllowDBNull = false;
                this.columnUSER_ID.MaxLength = 50;
                this.columnREVIEW_DATE.AllowDBNull = false;
                this.columnUSER_NAME.MaxLength = 50;
                this.columnPROD_NAME.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REVIEWRow NewREVIEWRow() {
                return ((REVIEWRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new REVIEWRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(REVIEWRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.REVIEWRowChanged != null)) {
                    this.REVIEWRowChanged(this, new REVIEWRowChangeEvent(((REVIEWRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.REVIEWRowChanging != null)) {
                    this.REVIEWRowChanging(this, new REVIEWRowChangeEvent(((REVIEWRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.REVIEWRowDeleted != null)) {
                    this.REVIEWRowDeleted(this, new REVIEWRowChangeEvent(((REVIEWRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.REVIEWRowDeleting != null)) {
                    this.REVIEWRowDeleting(this, new REVIEWRowChangeEvent(((REVIEWRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveREVIEWRow(REVIEWRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "REVIEWDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SELLERDataTable : global::System.Data.TypedTableBase<SELLERRow> {
            
            private global::System.Data.DataColumn columnSELLER_ID;
            
            private global::System.Data.DataColumn columnSELLER_PASSWORD;
            
            private global::System.Data.DataColumn columnSTOR_NAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SELLERDataTable() {
                this.TableName = "SELLER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SELLERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SELLERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SELLER_IDColumn {
                get {
                    return this.columnSELLER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SELLER_PASSWORDColumn {
                get {
                    return this.columnSELLER_PASSWORD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STOR_NAMEColumn {
                get {
                    return this.columnSTOR_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SELLERRow this[int index] {
                get {
                    return ((SELLERRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SELLERRowChangeEventHandler SELLERRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SELLERRowChangeEventHandler SELLERRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SELLERRowChangeEventHandler SELLERRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SELLERRowChangeEventHandler SELLERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSELLERRow(SELLERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SELLERRow AddSELLERRow(string SELLER_ID, string SELLER_PASSWORD, STORERow parentSTORERowBySELLER_FK1) {
                SELLERRow rowSELLERRow = ((SELLERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SELLER_ID,
                        SELLER_PASSWORD,
                        null};
                if ((parentSTORERowBySELLER_FK1 != null)) {
                    columnValuesArray[2] = parentSTORERowBySELLER_FK1[0];
                }
                rowSELLERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSELLERRow);
                return rowSELLERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SELLERRow FindBySELLER_ID(string SELLER_ID) {
                return ((SELLERRow)(this.Rows.Find(new object[] {
                            SELLER_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SELLERDataTable cln = ((SELLERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SELLERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnSELLER_ID = base.Columns["SELLER_ID"];
                this.columnSELLER_PASSWORD = base.Columns["SELLER_PASSWORD"];
                this.columnSTOR_NAME = base.Columns["STOR_NAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnSELLER_ID = new global::System.Data.DataColumn("SELLER_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSELLER_ID);
                this.columnSELLER_PASSWORD = new global::System.Data.DataColumn("SELLER_PASSWORD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSELLER_PASSWORD);
                this.columnSTOR_NAME = new global::System.Data.DataColumn("STOR_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOR_NAME);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSELLER_ID}, true));
                this.columnSELLER_ID.AllowDBNull = false;
                this.columnSELLER_ID.Unique = true;
                this.columnSELLER_ID.MaxLength = 50;
                this.columnSELLER_PASSWORD.AllowDBNull = false;
                this.columnSELLER_PASSWORD.MaxLength = 50;
                this.columnSTOR_NAME.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SELLERRow NewSELLERRow() {
                return ((SELLERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SELLERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SELLERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SELLERRowChanged != null)) {
                    this.SELLERRowChanged(this, new SELLERRowChangeEvent(((SELLERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SELLERRowChanging != null)) {
                    this.SELLERRowChanging(this, new SELLERRowChangeEvent(((SELLERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SELLERRowDeleted != null)) {
                    this.SELLERRowDeleted(this, new SELLERRowChangeEvent(((SELLERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SELLERRowDeleting != null)) {
                    this.SELLERRowDeleting(this, new SELLERRowChangeEvent(((SELLERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSELLERRow(SELLERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SELLERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class USERSDataTable : global::System.Data.TypedTableBase<USERSRow> {
            
            private global::System.Data.DataColumn columnUSER_ID;
            
            private global::System.Data.DataColumn columnUSER_PASSWORD;
            
            private global::System.Data.DataColumn columnUSER_NAME;
            
            private global::System.Data.DataColumn columnUSER_BIRTH;
            
            private global::System.Data.DataColumn columnUSER_TELE;
            
            private global::System.Data.DataColumn columnUSER_ADDR;
            
            private global::System.Data.DataColumn columnUSER_EMAIL;
            
            private global::System.Data.DataColumn columnUSER_NOT;
            
            private global::System.Data.DataColumn columnREFUND_COUNT;
            
            private global::System.Data.DataColumn columnUSER_GRADE;
            
            private global::System.Data.DataColumn columnORDERCOUNT;
            
            private global::System.Data.DataColumn columnPAYMONEY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public USERSDataTable() {
                this.TableName = "USERS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal USERSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected USERSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_IDColumn {
                get {
                    return this.columnUSER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_PASSWORDColumn {
                get {
                    return this.columnUSER_PASSWORD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_NAMEColumn {
                get {
                    return this.columnUSER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_BIRTHColumn {
                get {
                    return this.columnUSER_BIRTH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_TELEColumn {
                get {
                    return this.columnUSER_TELE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_ADDRColumn {
                get {
                    return this.columnUSER_ADDR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_EMAILColumn {
                get {
                    return this.columnUSER_EMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_NOTColumn {
                get {
                    return this.columnUSER_NOT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REFUND_COUNTColumn {
                get {
                    return this.columnREFUND_COUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_GRADEColumn {
                get {
                    return this.columnUSER_GRADE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ORDERCOUNTColumn {
                get {
                    return this.columnORDERCOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PAYMONEYColumn {
                get {
                    return this.columnPAYMONEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public USERSRow this[int index] {
                get {
                    return ((USERSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event USERSRowChangeEventHandler USERSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event USERSRowChangeEventHandler USERSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event USERSRowChangeEventHandler USERSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event USERSRowChangeEventHandler USERSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddUSERSRow(USERSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public USERSRow AddUSERSRow(string USER_ID, string USER_PASSWORD, string USER_NAME, string USER_BIRTH, string USER_TELE, string USER_ADDR, string USER_EMAIL, string USER_NOT, decimal REFUND_COUNT, string USER_GRADE, decimal ORDERCOUNT, decimal PAYMONEY) {
                USERSRow rowUSERSRow = ((USERSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        USER_ID,
                        USER_PASSWORD,
                        USER_NAME,
                        USER_BIRTH,
                        USER_TELE,
                        USER_ADDR,
                        USER_EMAIL,
                        USER_NOT,
                        REFUND_COUNT,
                        USER_GRADE,
                        ORDERCOUNT,
                        PAYMONEY};
                rowUSERSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUSERSRow);
                return rowUSERSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public USERSRow FindByUSER_ID(string USER_ID) {
                return ((USERSRow)(this.Rows.Find(new object[] {
                            USER_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                USERSDataTable cln = ((USERSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new USERSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnUSER_ID = base.Columns["USER_ID"];
                this.columnUSER_PASSWORD = base.Columns["USER_PASSWORD"];
                this.columnUSER_NAME = base.Columns["USER_NAME"];
                this.columnUSER_BIRTH = base.Columns["USER_BIRTH"];
                this.columnUSER_TELE = base.Columns["USER_TELE"];
                this.columnUSER_ADDR = base.Columns["USER_ADDR"];
                this.columnUSER_EMAIL = base.Columns["USER_EMAIL"];
                this.columnUSER_NOT = base.Columns["USER_NOT"];
                this.columnREFUND_COUNT = base.Columns["REFUND_COUNT"];
                this.columnUSER_GRADE = base.Columns["USER_GRADE"];
                this.columnORDERCOUNT = base.Columns["ORDERCOUNT"];
                this.columnPAYMONEY = base.Columns["PAYMONEY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnUSER_ID = new global::System.Data.DataColumn("USER_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_ID);
                this.columnUSER_PASSWORD = new global::System.Data.DataColumn("USER_PASSWORD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_PASSWORD);
                this.columnUSER_NAME = new global::System.Data.DataColumn("USER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_NAME);
                this.columnUSER_BIRTH = new global::System.Data.DataColumn("USER_BIRTH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_BIRTH);
                this.columnUSER_TELE = new global::System.Data.DataColumn("USER_TELE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_TELE);
                this.columnUSER_ADDR = new global::System.Data.DataColumn("USER_ADDR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_ADDR);
                this.columnUSER_EMAIL = new global::System.Data.DataColumn("USER_EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_EMAIL);
                this.columnUSER_NOT = new global::System.Data.DataColumn("USER_NOT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_NOT);
                this.columnREFUND_COUNT = new global::System.Data.DataColumn("REFUND_COUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFUND_COUNT);
                this.columnUSER_GRADE = new global::System.Data.DataColumn("USER_GRADE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_GRADE);
                this.columnORDERCOUNT = new global::System.Data.DataColumn("ORDERCOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDERCOUNT);
                this.columnPAYMONEY = new global::System.Data.DataColumn("PAYMONEY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAYMONEY);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUSER_ID}, true));
                this.columnUSER_ID.AllowDBNull = false;
                this.columnUSER_ID.Unique = true;
                this.columnUSER_ID.MaxLength = 50;
                this.columnUSER_PASSWORD.AllowDBNull = false;
                this.columnUSER_PASSWORD.MaxLength = 50;
                this.columnUSER_NAME.AllowDBNull = false;
                this.columnUSER_NAME.MaxLength = 50;
                this.columnUSER_BIRTH.AllowDBNull = false;
                this.columnUSER_BIRTH.MaxLength = 50;
                this.columnUSER_TELE.AllowDBNull = false;
                this.columnUSER_TELE.MaxLength = 50;
                this.columnUSER_ADDR.AllowDBNull = false;
                this.columnUSER_ADDR.MaxLength = 50;
                this.columnUSER_EMAIL.AllowDBNull = false;
                this.columnUSER_EMAIL.MaxLength = 50;
                this.columnUSER_NOT.AllowDBNull = false;
                this.columnUSER_NOT.MaxLength = 50;
                this.columnUSER_GRADE.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public USERSRow NewUSERSRow() {
                return ((USERSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new USERSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(USERSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.USERSRowChanged != null)) {
                    this.USERSRowChanged(this, new USERSRowChangeEvent(((USERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.USERSRowChanging != null)) {
                    this.USERSRowChanging(this, new USERSRowChangeEvent(((USERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.USERSRowDeleted != null)) {
                    this.USERSRowDeleted(this, new USERSRowChangeEvent(((USERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.USERSRowDeleting != null)) {
                    this.USERSRowDeleting(this, new USERSRowChangeEvent(((USERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveUSERSRow(USERSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "USERSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BASKETDataTable : global::System.Data.TypedTableBase<BASKETRow> {
            
            private global::System.Data.DataColumn columnUSER_ID;
            
            private global::System.Data.DataColumn columnPROD_ID;
            
            private global::System.Data.DataColumn columnSTOR_NAME;
            
            private global::System.Data.DataColumn columnPROD_PRICE;
            
            private global::System.Data.DataColumn columnPROD_KIND;
            
            private global::System.Data.DataColumn columnPROD_NAME;
            
            private global::System.Data.DataColumn columnPROD_COUNT;
            
            private global::System.Data.DataColumn columnTOTAL_PRICE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BASKETDataTable() {
                this.TableName = "BASKET";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BASKETDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected BASKETDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_IDColumn {
                get {
                    return this.columnUSER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROD_IDColumn {
                get {
                    return this.columnPROD_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STOR_NAMEColumn {
                get {
                    return this.columnSTOR_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROD_PRICEColumn {
                get {
                    return this.columnPROD_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROD_KINDColumn {
                get {
                    return this.columnPROD_KIND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROD_NAMEColumn {
                get {
                    return this.columnPROD_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROD_COUNTColumn {
                get {
                    return this.columnPROD_COUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOTAL_PRICEColumn {
                get {
                    return this.columnTOTAL_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BASKETRow this[int index] {
                get {
                    return ((BASKETRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BASKETRowChangeEventHandler BASKETRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BASKETRowChangeEventHandler BASKETRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BASKETRowChangeEventHandler BASKETRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BASKETRowChangeEventHandler BASKETRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddBASKETRow(BASKETRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BASKETRow AddBASKETRow(USERSRow parentUSERSRowByBASKET_FK2, PRODUCTSRow parentPRODUCTSRowByBASKET_FK3, STORERow parentSTORERowByBASKET_FK1, decimal PROD_PRICE, string PROD_KIND, string PROD_NAME, decimal PROD_COUNT, decimal TOTAL_PRICE) {
                BASKETRow rowBASKETRow = ((BASKETRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        PROD_PRICE,
                        PROD_KIND,
                        PROD_NAME,
                        PROD_COUNT,
                        TOTAL_PRICE};
                if ((parentUSERSRowByBASKET_FK2 != null)) {
                    columnValuesArray[0] = parentUSERSRowByBASKET_FK2[0];
                }
                if ((parentPRODUCTSRowByBASKET_FK3 != null)) {
                    columnValuesArray[1] = parentPRODUCTSRowByBASKET_FK3[0];
                }
                if ((parentSTORERowByBASKET_FK1 != null)) {
                    columnValuesArray[2] = parentSTORERowByBASKET_FK1[0];
                }
                rowBASKETRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBASKETRow);
                return rowBASKETRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BASKETRow FindByUSER_IDPROD_ID(string USER_ID, string PROD_ID) {
                return ((BASKETRow)(this.Rows.Find(new object[] {
                            USER_ID,
                            PROD_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BASKETDataTable cln = ((BASKETDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BASKETDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnUSER_ID = base.Columns["USER_ID"];
                this.columnPROD_ID = base.Columns["PROD_ID"];
                this.columnSTOR_NAME = base.Columns["STOR_NAME"];
                this.columnPROD_PRICE = base.Columns["PROD_PRICE"];
                this.columnPROD_KIND = base.Columns["PROD_KIND"];
                this.columnPROD_NAME = base.Columns["PROD_NAME"];
                this.columnPROD_COUNT = base.Columns["PROD_COUNT"];
                this.columnTOTAL_PRICE = base.Columns["TOTAL_PRICE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnUSER_ID = new global::System.Data.DataColumn("USER_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_ID);
                this.columnPROD_ID = new global::System.Data.DataColumn("PROD_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_ID);
                this.columnSTOR_NAME = new global::System.Data.DataColumn("STOR_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOR_NAME);
                this.columnPROD_PRICE = new global::System.Data.DataColumn("PROD_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_PRICE);
                this.columnPROD_KIND = new global::System.Data.DataColumn("PROD_KIND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_KIND);
                this.columnPROD_NAME = new global::System.Data.DataColumn("PROD_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_NAME);
                this.columnPROD_COUNT = new global::System.Data.DataColumn("PROD_COUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_COUNT);
                this.columnTOTAL_PRICE = new global::System.Data.DataColumn("TOTAL_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_PRICE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUSER_ID,
                                this.columnPROD_ID}, true));
                this.columnUSER_ID.AllowDBNull = false;
                this.columnUSER_ID.MaxLength = 50;
                this.columnPROD_ID.AllowDBNull = false;
                this.columnPROD_ID.MaxLength = 50;
                this.columnSTOR_NAME.AllowDBNull = false;
                this.columnSTOR_NAME.MaxLength = 50;
                this.columnPROD_PRICE.AllowDBNull = false;
                this.columnPROD_KIND.AllowDBNull = false;
                this.columnPROD_KIND.MaxLength = 50;
                this.columnPROD_NAME.AllowDBNull = false;
                this.columnPROD_NAME.MaxLength = 50;
                this.columnPROD_COUNT.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BASKETRow NewBASKETRow() {
                return ((BASKETRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BASKETRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BASKETRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BASKETRowChanged != null)) {
                    this.BASKETRowChanged(this, new BASKETRowChangeEvent(((BASKETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BASKETRowChanging != null)) {
                    this.BASKETRowChanging(this, new BASKETRowChangeEvent(((BASKETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BASKETRowDeleted != null)) {
                    this.BASKETRowDeleted(this, new BASKETRowChangeEvent(((BASKETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BASKETRowDeleting != null)) {
                    this.BASKETRowDeleting(this, new BASKETRowChangeEvent(((BASKETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveBASKETRow(BASKETRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BASKETDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ORDERD_PRODDataTable : global::System.Data.TypedTableBase<ORDERD_PRODRow> {
            
            private global::System.Data.DataColumn columnORDER_ID;
            
            private global::System.Data.DataColumn columnPROD_ID;
            
            private global::System.Data.DataColumn columnSTOR_NAME;
            
            private global::System.Data.DataColumn columnUSER_ID;
            
            private global::System.Data.DataColumn columnPROD_PRICE;
            
            private global::System.Data.DataColumn columnPROD_KIND;
            
            private global::System.Data.DataColumn columnPROD_NAME;
            
            private global::System.Data.DataColumn columnORDER_OK;
            
            private global::System.Data.DataColumn columnPROD_COUNT;
            
            private global::System.Data.DataColumn columnSELLER_ID;
            
            private global::System.Data.DataColumn columnTOTAL_PRICE;
            
            private global::System.Data.DataColumn columnORDER_DATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ORDERD_PRODDataTable() {
                this.TableName = "ORDERD_PROD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ORDERD_PRODDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ORDERD_PRODDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ORDER_IDColumn {
                get {
                    return this.columnORDER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROD_IDColumn {
                get {
                    return this.columnPROD_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STOR_NAMEColumn {
                get {
                    return this.columnSTOR_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_IDColumn {
                get {
                    return this.columnUSER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROD_PRICEColumn {
                get {
                    return this.columnPROD_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROD_KINDColumn {
                get {
                    return this.columnPROD_KIND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROD_NAMEColumn {
                get {
                    return this.columnPROD_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ORDER_OKColumn {
                get {
                    return this.columnORDER_OK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROD_COUNTColumn {
                get {
                    return this.columnPROD_COUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SELLER_IDColumn {
                get {
                    return this.columnSELLER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOTAL_PRICEColumn {
                get {
                    return this.columnTOTAL_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ORDER_DATEColumn {
                get {
                    return this.columnORDER_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ORDERD_PRODRow this[int index] {
                get {
                    return ((ORDERD_PRODRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ORDERD_PRODRowChangeEventHandler ORDERD_PRODRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ORDERD_PRODRowChangeEventHandler ORDERD_PRODRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ORDERD_PRODRowChangeEventHandler ORDERD_PRODRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ORDERD_PRODRowChangeEventHandler ORDERD_PRODRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddORDERD_PRODRow(ORDERD_PRODRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ORDERD_PRODRow AddORDERD_PRODRow(decimal ORDER_ID, PRODUCTSRow parentPRODUCTSRowByORDERD_PROD_FK3, STORERow parentSTORERowByORDERD_PROD_FK2, USERSRow parentUSERSRowByORDERD_PROD_FK1, decimal PROD_PRICE, string PROD_KIND, string PROD_NAME, string ORDER_OK, string PROD_COUNT, string SELLER_ID, decimal TOTAL_PRICE, System.DateTime ORDER_DATE) {
                ORDERD_PRODRow rowORDERD_PRODRow = ((ORDERD_PRODRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ORDER_ID,
                        null,
                        null,
                        null,
                        PROD_PRICE,
                        PROD_KIND,
                        PROD_NAME,
                        ORDER_OK,
                        PROD_COUNT,
                        SELLER_ID,
                        TOTAL_PRICE,
                        ORDER_DATE};
                if ((parentPRODUCTSRowByORDERD_PROD_FK3 != null)) {
                    columnValuesArray[1] = parentPRODUCTSRowByORDERD_PROD_FK3[0];
                }
                if ((parentSTORERowByORDERD_PROD_FK2 != null)) {
                    columnValuesArray[2] = parentSTORERowByORDERD_PROD_FK2[0];
                }
                if ((parentUSERSRowByORDERD_PROD_FK1 != null)) {
                    columnValuesArray[3] = parentUSERSRowByORDERD_PROD_FK1[0];
                }
                rowORDERD_PRODRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowORDERD_PRODRow);
                return rowORDERD_PRODRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ORDERD_PRODRow FindByORDER_IDPROD_IDUSER_ID(decimal ORDER_ID, string PROD_ID, string USER_ID) {
                return ((ORDERD_PRODRow)(this.Rows.Find(new object[] {
                            ORDER_ID,
                            PROD_ID,
                            USER_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ORDERD_PRODDataTable cln = ((ORDERD_PRODDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ORDERD_PRODDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnORDER_ID = base.Columns["ORDER_ID"];
                this.columnPROD_ID = base.Columns["PROD_ID"];
                this.columnSTOR_NAME = base.Columns["STOR_NAME"];
                this.columnUSER_ID = base.Columns["USER_ID"];
                this.columnPROD_PRICE = base.Columns["PROD_PRICE"];
                this.columnPROD_KIND = base.Columns["PROD_KIND"];
                this.columnPROD_NAME = base.Columns["PROD_NAME"];
                this.columnORDER_OK = base.Columns["ORDER_OK"];
                this.columnPROD_COUNT = base.Columns["PROD_COUNT"];
                this.columnSELLER_ID = base.Columns["SELLER_ID"];
                this.columnTOTAL_PRICE = base.Columns["TOTAL_PRICE"];
                this.columnORDER_DATE = base.Columns["ORDER_DATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnORDER_ID = new global::System.Data.DataColumn("ORDER_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_ID);
                this.columnPROD_ID = new global::System.Data.DataColumn("PROD_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_ID);
                this.columnSTOR_NAME = new global::System.Data.DataColumn("STOR_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOR_NAME);
                this.columnUSER_ID = new global::System.Data.DataColumn("USER_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_ID);
                this.columnPROD_PRICE = new global::System.Data.DataColumn("PROD_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_PRICE);
                this.columnPROD_KIND = new global::System.Data.DataColumn("PROD_KIND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_KIND);
                this.columnPROD_NAME = new global::System.Data.DataColumn("PROD_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_NAME);
                this.columnORDER_OK = new global::System.Data.DataColumn("ORDER_OK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_OK);
                this.columnPROD_COUNT = new global::System.Data.DataColumn("PROD_COUNT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_COUNT);
                this.columnSELLER_ID = new global::System.Data.DataColumn("SELLER_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSELLER_ID);
                this.columnTOTAL_PRICE = new global::System.Data.DataColumn("TOTAL_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_PRICE);
                this.columnORDER_DATE = new global::System.Data.DataColumn("ORDER_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_DATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnORDER_ID,
                                this.columnPROD_ID,
                                this.columnUSER_ID}, true));
                this.columnORDER_ID.AllowDBNull = false;
                this.columnPROD_ID.AllowDBNull = false;
                this.columnPROD_ID.MaxLength = 50;
                this.columnSTOR_NAME.AllowDBNull = false;
                this.columnSTOR_NAME.MaxLength = 50;
                this.columnUSER_ID.AllowDBNull = false;
                this.columnUSER_ID.MaxLength = 50;
                this.columnPROD_PRICE.AllowDBNull = false;
                this.columnPROD_KIND.AllowDBNull = false;
                this.columnPROD_KIND.MaxLength = 50;
                this.columnPROD_NAME.AllowDBNull = false;
                this.columnPROD_NAME.MaxLength = 50;
                this.columnORDER_OK.AllowDBNull = false;
                this.columnORDER_OK.MaxLength = 50;
                this.columnPROD_COUNT.AllowDBNull = false;
                this.columnPROD_COUNT.MaxLength = 50;
                this.columnSELLER_ID.MaxLength = 50;
                this.columnORDER_DATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ORDERD_PRODRow NewORDERD_PRODRow() {
                return ((ORDERD_PRODRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ORDERD_PRODRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ORDERD_PRODRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ORDERD_PRODRowChanged != null)) {
                    this.ORDERD_PRODRowChanged(this, new ORDERD_PRODRowChangeEvent(((ORDERD_PRODRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ORDERD_PRODRowChanging != null)) {
                    this.ORDERD_PRODRowChanging(this, new ORDERD_PRODRowChangeEvent(((ORDERD_PRODRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ORDERD_PRODRowDeleted != null)) {
                    this.ORDERD_PRODRowDeleted(this, new ORDERD_PRODRowChangeEvent(((ORDERD_PRODRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ORDERD_PRODRowDeleting != null)) {
                    this.ORDERD_PRODRowDeleting(this, new ORDERD_PRODRowChangeEvent(((ORDERD_PRODRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveORDERD_PRODRow(ORDERD_PRODRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ORDERD_PRODDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NOTICEDataTable : global::System.Data.TypedTableBase<NOTICERow> {
            
            private global::System.Data.DataColumn columnNOTICE_ID;
            
            private global::System.Data.DataColumn columnNOTICE_TITLE;
            
            private global::System.Data.DataColumn columnNOTICE_CONTENT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public NOTICEDataTable() {
                this.TableName = "NOTICE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal NOTICEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected NOTICEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTICE_IDColumn {
                get {
                    return this.columnNOTICE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTICE_TITLEColumn {
                get {
                    return this.columnNOTICE_TITLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTICE_CONTENTColumn {
                get {
                    return this.columnNOTICE_CONTENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public NOTICERow this[int index] {
                get {
                    return ((NOTICERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event NOTICERowChangeEventHandler NOTICERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event NOTICERowChangeEventHandler NOTICERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event NOTICERowChangeEventHandler NOTICERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event NOTICERowChangeEventHandler NOTICERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddNOTICERow(NOTICERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public NOTICERow AddNOTICERow(string NOTICE_ID, string NOTICE_TITLE, string NOTICE_CONTENT) {
                NOTICERow rowNOTICERow = ((NOTICERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NOTICE_ID,
                        NOTICE_TITLE,
                        NOTICE_CONTENT};
                rowNOTICERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowNOTICERow);
                return rowNOTICERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public NOTICERow FindByNOTICE_ID(string NOTICE_ID) {
                return ((NOTICERow)(this.Rows.Find(new object[] {
                            NOTICE_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                NOTICEDataTable cln = ((NOTICEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new NOTICEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNOTICE_ID = base.Columns["NOTICE_ID"];
                this.columnNOTICE_TITLE = base.Columns["NOTICE_TITLE"];
                this.columnNOTICE_CONTENT = base.Columns["NOTICE_CONTENT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNOTICE_ID = new global::System.Data.DataColumn("NOTICE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTICE_ID);
                this.columnNOTICE_TITLE = new global::System.Data.DataColumn("NOTICE_TITLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTICE_TITLE);
                this.columnNOTICE_CONTENT = new global::System.Data.DataColumn("NOTICE_CONTENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTICE_CONTENT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNOTICE_ID}, true));
                this.columnNOTICE_ID.AllowDBNull = false;
                this.columnNOTICE_ID.Unique = true;
                this.columnNOTICE_ID.MaxLength = 50;
                this.columnNOTICE_TITLE.MaxLength = 50;
                this.columnNOTICE_CONTENT.MaxLength = 999;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public NOTICERow NewNOTICERow() {
                return ((NOTICERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new NOTICERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(NOTICERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NOTICERowChanged != null)) {
                    this.NOTICERowChanged(this, new NOTICERowChangeEvent(((NOTICERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NOTICERowChanging != null)) {
                    this.NOTICERowChanging(this, new NOTICERowChangeEvent(((NOTICERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NOTICERowDeleted != null)) {
                    this.NOTICERowDeleted(this, new NOTICERowChangeEvent(((NOTICERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NOTICERowDeleting != null)) {
                    this.NOTICERowDeleting(this, new NOTICERowChangeEvent(((NOTICERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveNOTICERow(NOTICERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NOTICEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class STOREDataTable : global::System.Data.TypedTableBase<STORERow> {
            
            private global::System.Data.DataColumn columnSTOR_NAME;
            
            private global::System.Data.DataColumn columnTOTAL_SALE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public STOREDataTable() {
                this.TableName = "STORE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal STOREDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected STOREDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STOR_NAMEColumn {
                get {
                    return this.columnSTOR_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOTAL_SALEColumn {
                get {
                    return this.columnTOTAL_SALE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public STORERow this[int index] {
                get {
                    return ((STORERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event STORERowChangeEventHandler STORERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event STORERowChangeEventHandler STORERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event STORERowChangeEventHandler STORERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event STORERowChangeEventHandler STORERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSTORERow(STORERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public STORERow AddSTORERow(string STOR_NAME, decimal TOTAL_SALE) {
                STORERow rowSTORERow = ((STORERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        STOR_NAME,
                        TOTAL_SALE};
                rowSTORERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSTORERow);
                return rowSTORERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public STORERow FindBySTOR_NAME(string STOR_NAME) {
                return ((STORERow)(this.Rows.Find(new object[] {
                            STOR_NAME})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                STOREDataTable cln = ((STOREDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new STOREDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnSTOR_NAME = base.Columns["STOR_NAME"];
                this.columnTOTAL_SALE = base.Columns["TOTAL_SALE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnSTOR_NAME = new global::System.Data.DataColumn("STOR_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOR_NAME);
                this.columnTOTAL_SALE = new global::System.Data.DataColumn("TOTAL_SALE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_SALE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSTOR_NAME}, true));
                this.columnSTOR_NAME.AllowDBNull = false;
                this.columnSTOR_NAME.Unique = true;
                this.columnSTOR_NAME.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public STORERow NewSTORERow() {
                return ((STORERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new STORERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(STORERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.STORERowChanged != null)) {
                    this.STORERowChanged(this, new STORERowChangeEvent(((STORERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.STORERowChanging != null)) {
                    this.STORERowChanging(this, new STORERowChangeEvent(((STORERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.STORERowDeleted != null)) {
                    this.STORERowDeleted(this, new STORERowChangeEvent(((STORERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.STORERowDeleting != null)) {
                    this.STORERowDeleting(this, new STORERowChangeEvent(((STORERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSTORERow(STORERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "STOREDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VIEW3DataTable : global::System.Data.TypedTableBase<VIEW3Row> {
            
            private global::System.Data.DataColumn columnORDER_ID;
            
            private global::System.Data.DataColumn columnPROD_ID;
            
            private global::System.Data.DataColumn columnSTOR_NAME;
            
            private global::System.Data.DataColumn columnUSER_ID;
            
            private global::System.Data.DataColumn columnPROD_PRICE;
            
            private global::System.Data.DataColumn columnORDER_DATE;
            
            private global::System.Data.DataColumn columnPROD_KIND;
            
            private global::System.Data.DataColumn columnPROD_NAME;
            
            private global::System.Data.DataColumn columnORDER_OK;
            
            private global::System.Data.DataColumn columnPROD_COUNT;
            
            private global::System.Data.DataColumn columnSELLER_ID;
            
            private global::System.Data.DataColumn columnTOTAL_PRICE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VIEW3DataTable() {
                this.TableName = "VIEW3";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal VIEW3DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected VIEW3DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ORDER_IDColumn {
                get {
                    return this.columnORDER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROD_IDColumn {
                get {
                    return this.columnPROD_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STOR_NAMEColumn {
                get {
                    return this.columnSTOR_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_IDColumn {
                get {
                    return this.columnUSER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROD_PRICEColumn {
                get {
                    return this.columnPROD_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ORDER_DATEColumn {
                get {
                    return this.columnORDER_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROD_KINDColumn {
                get {
                    return this.columnPROD_KIND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROD_NAMEColumn {
                get {
                    return this.columnPROD_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ORDER_OKColumn {
                get {
                    return this.columnORDER_OK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROD_COUNTColumn {
                get {
                    return this.columnPROD_COUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SELLER_IDColumn {
                get {
                    return this.columnSELLER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOTAL_PRICEColumn {
                get {
                    return this.columnTOTAL_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VIEW3Row this[int index] {
                get {
                    return ((VIEW3Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VIEW3RowChangeEventHandler VIEW3RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VIEW3RowChangeEventHandler VIEW3RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VIEW3RowChangeEventHandler VIEW3RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VIEW3RowChangeEventHandler VIEW3RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddVIEW3Row(VIEW3Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VIEW3Row AddVIEW3Row(decimal ORDER_ID, string PROD_ID, string STOR_NAME, string USER_ID, decimal PROD_PRICE, System.DateTime ORDER_DATE, string PROD_KIND, string PROD_NAME, string ORDER_OK, string PROD_COUNT, string SELLER_ID, decimal TOTAL_PRICE) {
                VIEW3Row rowVIEW3Row = ((VIEW3Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ORDER_ID,
                        PROD_ID,
                        STOR_NAME,
                        USER_ID,
                        PROD_PRICE,
                        ORDER_DATE,
                        PROD_KIND,
                        PROD_NAME,
                        ORDER_OK,
                        PROD_COUNT,
                        SELLER_ID,
                        TOTAL_PRICE};
                rowVIEW3Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowVIEW3Row);
                return rowVIEW3Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                VIEW3DataTable cln = ((VIEW3DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VIEW3DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnORDER_ID = base.Columns["ORDER_ID"];
                this.columnPROD_ID = base.Columns["PROD_ID"];
                this.columnSTOR_NAME = base.Columns["STOR_NAME"];
                this.columnUSER_ID = base.Columns["USER_ID"];
                this.columnPROD_PRICE = base.Columns["PROD_PRICE"];
                this.columnORDER_DATE = base.Columns["ORDER_DATE"];
                this.columnPROD_KIND = base.Columns["PROD_KIND"];
                this.columnPROD_NAME = base.Columns["PROD_NAME"];
                this.columnORDER_OK = base.Columns["ORDER_OK"];
                this.columnPROD_COUNT = base.Columns["PROD_COUNT"];
                this.columnSELLER_ID = base.Columns["SELLER_ID"];
                this.columnTOTAL_PRICE = base.Columns["TOTAL_PRICE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnORDER_ID = new global::System.Data.DataColumn("ORDER_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_ID);
                this.columnPROD_ID = new global::System.Data.DataColumn("PROD_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_ID);
                this.columnSTOR_NAME = new global::System.Data.DataColumn("STOR_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOR_NAME);
                this.columnUSER_ID = new global::System.Data.DataColumn("USER_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_ID);
                this.columnPROD_PRICE = new global::System.Data.DataColumn("PROD_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_PRICE);
                this.columnORDER_DATE = new global::System.Data.DataColumn("ORDER_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_DATE);
                this.columnPROD_KIND = new global::System.Data.DataColumn("PROD_KIND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_KIND);
                this.columnPROD_NAME = new global::System.Data.DataColumn("PROD_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_NAME);
                this.columnORDER_OK = new global::System.Data.DataColumn("ORDER_OK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_OK);
                this.columnPROD_COUNT = new global::System.Data.DataColumn("PROD_COUNT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_COUNT);
                this.columnSELLER_ID = new global::System.Data.DataColumn("SELLER_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSELLER_ID);
                this.columnTOTAL_PRICE = new global::System.Data.DataColumn("TOTAL_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_PRICE);
                this.columnORDER_ID.AllowDBNull = false;
                this.columnPROD_ID.AllowDBNull = false;
                this.columnPROD_ID.MaxLength = 50;
                this.columnSTOR_NAME.AllowDBNull = false;
                this.columnSTOR_NAME.MaxLength = 50;
                this.columnUSER_ID.AllowDBNull = false;
                this.columnUSER_ID.MaxLength = 50;
                this.columnPROD_PRICE.AllowDBNull = false;
                this.columnORDER_DATE.AllowDBNull = false;
                this.columnPROD_KIND.AllowDBNull = false;
                this.columnPROD_KIND.MaxLength = 50;
                this.columnPROD_NAME.AllowDBNull = false;
                this.columnPROD_NAME.MaxLength = 50;
                this.columnORDER_OK.AllowDBNull = false;
                this.columnORDER_OK.MaxLength = 50;
                this.columnPROD_COUNT.AllowDBNull = false;
                this.columnPROD_COUNT.MaxLength = 50;
                this.columnSELLER_ID.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VIEW3Row NewVIEW3Row() {
                return ((VIEW3Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VIEW3Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(VIEW3Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VIEW3RowChanged != null)) {
                    this.VIEW3RowChanged(this, new VIEW3RowChangeEvent(((VIEW3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VIEW3RowChanging != null)) {
                    this.VIEW3RowChanging(this, new VIEW3RowChangeEvent(((VIEW3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VIEW3RowDeleted != null)) {
                    this.VIEW3RowDeleted(this, new VIEW3RowChangeEvent(((VIEW3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VIEW3RowDeleting != null)) {
                    this.VIEW3RowDeleting(this, new VIEW3RowChangeEvent(((VIEW3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveVIEW3Row(VIEW3Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VIEW3DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NEWPRODDataTable : global::System.Data.TypedTableBase<NEWPRODRow> {
            
            private global::System.Data.DataColumn columnPROD_ID;
            
            private global::System.Data.DataColumn columnORDER_COUNT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public NEWPRODDataTable() {
                this.TableName = "NEWPROD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal NEWPRODDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected NEWPRODDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROD_IDColumn {
                get {
                    return this.columnPROD_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ORDER_COUNTColumn {
                get {
                    return this.columnORDER_COUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public NEWPRODRow this[int index] {
                get {
                    return ((NEWPRODRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event NEWPRODRowChangeEventHandler NEWPRODRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event NEWPRODRowChangeEventHandler NEWPRODRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event NEWPRODRowChangeEventHandler NEWPRODRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event NEWPRODRowChangeEventHandler NEWPRODRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddNEWPRODRow(NEWPRODRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public NEWPRODRow AddNEWPRODRow(string PROD_ID, decimal ORDER_COUNT) {
                NEWPRODRow rowNEWPRODRow = ((NEWPRODRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PROD_ID,
                        ORDER_COUNT};
                rowNEWPRODRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowNEWPRODRow);
                return rowNEWPRODRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                NEWPRODDataTable cln = ((NEWPRODDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new NEWPRODDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnPROD_ID = base.Columns["PROD_ID"];
                this.columnORDER_COUNT = base.Columns["ORDER_COUNT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnPROD_ID = new global::System.Data.DataColumn("PROD_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_ID);
                this.columnORDER_COUNT = new global::System.Data.DataColumn("ORDER_COUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_COUNT);
                this.columnPROD_ID.AllowDBNull = false;
                this.columnPROD_ID.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public NEWPRODRow NewNEWPRODRow() {
                return ((NEWPRODRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new NEWPRODRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(NEWPRODRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NEWPRODRowChanged != null)) {
                    this.NEWPRODRowChanged(this, new NEWPRODRowChangeEvent(((NEWPRODRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NEWPRODRowChanging != null)) {
                    this.NEWPRODRowChanging(this, new NEWPRODRowChangeEvent(((NEWPRODRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NEWPRODRowDeleted != null)) {
                    this.NEWPRODRowDeleted(this, new NEWPRODRowChangeEvent(((NEWPRODRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NEWPRODRowDeleting != null)) {
                    this.NEWPRODRowDeleting(this, new NEWPRODRowChangeEvent(((NEWPRODRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveNEWPRODRow(NEWPRODRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NEWPRODDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PROD_REFUNDDataTable : global::System.Data.TypedTableBase<PROD_REFUNDRow> {
            
            private global::System.Data.DataColumn columnPROD_ID;
            
            private global::System.Data.DataColumn columnREFUND_COUNT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PROD_REFUNDDataTable() {
                this.TableName = "PROD_REFUND";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PROD_REFUNDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected PROD_REFUNDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROD_IDColumn {
                get {
                    return this.columnPROD_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REFUND_COUNTColumn {
                get {
                    return this.columnREFUND_COUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PROD_REFUNDRow this[int index] {
                get {
                    return ((PROD_REFUNDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PROD_REFUNDRowChangeEventHandler PROD_REFUNDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PROD_REFUNDRowChangeEventHandler PROD_REFUNDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PROD_REFUNDRowChangeEventHandler PROD_REFUNDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PROD_REFUNDRowChangeEventHandler PROD_REFUNDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddPROD_REFUNDRow(PROD_REFUNDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PROD_REFUNDRow AddPROD_REFUNDRow(string PROD_ID, decimal REFUND_COUNT) {
                PROD_REFUNDRow rowPROD_REFUNDRow = ((PROD_REFUNDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PROD_ID,
                        REFUND_COUNT};
                rowPROD_REFUNDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPROD_REFUNDRow);
                return rowPROD_REFUNDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PROD_REFUNDDataTable cln = ((PROD_REFUNDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PROD_REFUNDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnPROD_ID = base.Columns["PROD_ID"];
                this.columnREFUND_COUNT = base.Columns["REFUND_COUNT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnPROD_ID = new global::System.Data.DataColumn("PROD_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_ID);
                this.columnREFUND_COUNT = new global::System.Data.DataColumn("REFUND_COUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFUND_COUNT);
                this.columnPROD_ID.AllowDBNull = false;
                this.columnPROD_ID.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PROD_REFUNDRow NewPROD_REFUNDRow() {
                return ((PROD_REFUNDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PROD_REFUNDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PROD_REFUNDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PROD_REFUNDRowChanged != null)) {
                    this.PROD_REFUNDRowChanged(this, new PROD_REFUNDRowChangeEvent(((PROD_REFUNDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PROD_REFUNDRowChanging != null)) {
                    this.PROD_REFUNDRowChanging(this, new PROD_REFUNDRowChangeEvent(((PROD_REFUNDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PROD_REFUNDRowDeleted != null)) {
                    this.PROD_REFUNDRowDeleted(this, new PROD_REFUNDRowChangeEvent(((PROD_REFUNDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PROD_REFUNDRowDeleting != null)) {
                    this.PROD_REFUNDRowDeleting(this, new PROD_REFUNDRowChangeEvent(((PROD_REFUNDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovePROD_REFUNDRow(PROD_REFUNDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PROD_REFUNDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ADMINRow : global::System.Data.DataRow {
            
            private ADMINDataTable tableADMIN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ADMINRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableADMIN = ((ADMINDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ADMIN_ID {
                get {
                    return ((string)(this[this.tableADMIN.ADMIN_IDColumn]));
                }
                set {
                    this[this.tableADMIN.ADMIN_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ADMIN_PASSWORD {
                get {
                    return ((string)(this[this.tableADMIN.ADMIN_PASSWORDColumn]));
                }
                set {
                    this[this.tableADMIN.ADMIN_PASSWORDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ADMIN_NAME {
                get {
                    return ((string)(this[this.tableADMIN.ADMIN_NAMEColumn]));
                }
                set {
                    this[this.tableADMIN.ADMIN_NAMEColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PRODUCTSRow : global::System.Data.DataRow {
            
            private PRODUCTSDataTable tablePRODUCTS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PRODUCTSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePRODUCTS = ((PRODUCTSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PROD_ID {
                get {
                    return ((string)(this[this.tablePRODUCTS.PROD_IDColumn]));
                }
                set {
                    this[this.tablePRODUCTS.PROD_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string STOR_NAME {
                get {
                    return ((string)(this[this.tablePRODUCTS.STOR_NAMEColumn]));
                }
                set {
                    this[this.tablePRODUCTS.STOR_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PROD_NAME {
                get {
                    return ((string)(this[this.tablePRODUCTS.PROD_NAMEColumn]));
                }
                set {
                    this[this.tablePRODUCTS.PROD_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PROD_KIND {
                get {
                    return ((string)(this[this.tablePRODUCTS.PROD_KINDColumn]));
                }
                set {
                    this[this.tablePRODUCTS.PROD_KINDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PROD_PRICE {
                get {
                    return ((decimal)(this[this.tablePRODUCTS.PROD_PRICEColumn]));
                }
                set {
                    this[this.tablePRODUCTS.PROD_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PROD_COUNT {
                get {
                    return ((string)(this[this.tablePRODUCTS.PROD_COUNTColumn]));
                }
                set {
                    this[this.tablePRODUCTS.PROD_COUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ORDER_COUNT {
                get {
                    try {
                        return ((decimal)(this[this.tablePRODUCTS.ORDER_COUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'PRODUCTS\' 테이블의 \'ORDER_COUNT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tablePRODUCTS.ORDER_COUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal REFUND_COUNT {
                get {
                    try {
                        return ((decimal)(this[this.tablePRODUCTS.REFUND_COUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'PRODUCTS\' 테이블의 \'REFUND_COUNT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tablePRODUCTS.REFUND_COUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsORDER_COUNTNull() {
                return this.IsNull(this.tablePRODUCTS.ORDER_COUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetORDER_COUNTNull() {
                this[this.tablePRODUCTS.ORDER_COUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsREFUND_COUNTNull() {
                return this.IsNull(this.tablePRODUCTS.REFUND_COUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetREFUND_COUNTNull() {
                this[this.tablePRODUCTS.REFUND_COUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BASKETRow[] GetBASKETRows() {
                if ((this.Table.ChildRelations["BASKET_FK3"] == null)) {
                    return new BASKETRow[0];
                }
                else {
                    return ((BASKETRow[])(base.GetChildRows(this.Table.ChildRelations["BASKET_FK3"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ORDERD_PRODRow[] GetORDERD_PRODRows() {
                if ((this.Table.ChildRelations["ORDERD_PROD_FK3"] == null)) {
                    return new ORDERD_PRODRow[0];
                }
                else {
                    return ((ORDERD_PRODRow[])(base.GetChildRows(this.Table.ChildRelations["ORDERD_PROD_FK3"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class REVIEWRow : global::System.Data.DataRow {
            
            private REVIEWDataTable tableREVIEW;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal REVIEWRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableREVIEW = ((REVIEWDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string REVIEW_ID {
                get {
                    return ((string)(this[this.tableREVIEW.REVIEW_IDColumn]));
                }
                set {
                    this[this.tableREVIEW.REVIEW_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PROD_ID {
                get {
                    return ((string)(this[this.tableREVIEW.PROD_IDColumn]));
                }
                set {
                    this[this.tableREVIEW.PROD_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string REVIEW_TITLE {
                get {
                    return ((string)(this[this.tableREVIEW.REVIEW_TITLEColumn]));
                }
                set {
                    this[this.tableREVIEW.REVIEW_TITLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string REVIEW_CONTENT {
                get {
                    return ((string)(this[this.tableREVIEW.REVIEW_CONTENTColumn]));
                }
                set {
                    this[this.tableREVIEW.REVIEW_CONTENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string USER_ID {
                get {
                    return ((string)(this[this.tableREVIEW.USER_IDColumn]));
                }
                set {
                    this[this.tableREVIEW.USER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime REVIEW_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableREVIEW.REVIEW_DATEColumn]));
                }
                set {
                    this[this.tableREVIEW.REVIEW_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string USER_NAME {
                get {
                    try {
                        return ((string)(this[this.tableREVIEW.USER_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'REVIEW\' 테이블의 \'USER_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableREVIEW.USER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PROD_NAME {
                get {
                    try {
                        return ((string)(this[this.tableREVIEW.PROD_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'REVIEW\' 테이블의 \'PROD_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableREVIEW.PROD_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUSER_NAMENull() {
                return this.IsNull(this.tableREVIEW.USER_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUSER_NAMENull() {
                this[this.tableREVIEW.USER_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPROD_NAMENull() {
                return this.IsNull(this.tableREVIEW.PROD_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPROD_NAMENull() {
                this[this.tableREVIEW.PROD_NAMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SELLERRow : global::System.Data.DataRow {
            
            private SELLERDataTable tableSELLER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SELLERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSELLER = ((SELLERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SELLER_ID {
                get {
                    return ((string)(this[this.tableSELLER.SELLER_IDColumn]));
                }
                set {
                    this[this.tableSELLER.SELLER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SELLER_PASSWORD {
                get {
                    return ((string)(this[this.tableSELLER.SELLER_PASSWORDColumn]));
                }
                set {
                    this[this.tableSELLER.SELLER_PASSWORDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string STOR_NAME {
                get {
                    try {
                        return ((string)(this[this.tableSELLER.STOR_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SELLER\' 테이블의 \'STOR_NAME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSELLER.STOR_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public STORERow STORERow {
                get {
                    return ((STORERow)(this.GetParentRow(this.Table.ParentRelations["SELLER_FK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SELLER_FK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSTOR_NAMENull() {
                return this.IsNull(this.tableSELLER.STOR_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSTOR_NAMENull() {
                this[this.tableSELLER.STOR_NAMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class USERSRow : global::System.Data.DataRow {
            
            private USERSDataTable tableUSERS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal USERSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUSERS = ((USERSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string USER_ID {
                get {
                    return ((string)(this[this.tableUSERS.USER_IDColumn]));
                }
                set {
                    this[this.tableUSERS.USER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string USER_PASSWORD {
                get {
                    return ((string)(this[this.tableUSERS.USER_PASSWORDColumn]));
                }
                set {
                    this[this.tableUSERS.USER_PASSWORDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string USER_NAME {
                get {
                    return ((string)(this[this.tableUSERS.USER_NAMEColumn]));
                }
                set {
                    this[this.tableUSERS.USER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string USER_BIRTH {
                get {
                    return ((string)(this[this.tableUSERS.USER_BIRTHColumn]));
                }
                set {
                    this[this.tableUSERS.USER_BIRTHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string USER_TELE {
                get {
                    return ((string)(this[this.tableUSERS.USER_TELEColumn]));
                }
                set {
                    this[this.tableUSERS.USER_TELEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string USER_ADDR {
                get {
                    return ((string)(this[this.tableUSERS.USER_ADDRColumn]));
                }
                set {
                    this[this.tableUSERS.USER_ADDRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string USER_EMAIL {
                get {
                    return ((string)(this[this.tableUSERS.USER_EMAILColumn]));
                }
                set {
                    this[this.tableUSERS.USER_EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string USER_NOT {
                get {
                    return ((string)(this[this.tableUSERS.USER_NOTColumn]));
                }
                set {
                    this[this.tableUSERS.USER_NOTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal REFUND_COUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableUSERS.REFUND_COUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'USERS\' 테이블의 \'REFUND_COUNT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableUSERS.REFUND_COUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string USER_GRADE {
                get {
                    try {
                        return ((string)(this[this.tableUSERS.USER_GRADEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'USERS\' 테이블의 \'USER_GRADE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableUSERS.USER_GRADEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ORDERCOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableUSERS.ORDERCOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'USERS\' 테이블의 \'ORDERCOUNT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableUSERS.ORDERCOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PAYMONEY {
                get {
                    try {
                        return ((decimal)(this[this.tableUSERS.PAYMONEYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'USERS\' 테이블의 \'PAYMONEY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableUSERS.PAYMONEYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsREFUND_COUNTNull() {
                return this.IsNull(this.tableUSERS.REFUND_COUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetREFUND_COUNTNull() {
                this[this.tableUSERS.REFUND_COUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUSER_GRADENull() {
                return this.IsNull(this.tableUSERS.USER_GRADEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUSER_GRADENull() {
                this[this.tableUSERS.USER_GRADEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsORDERCOUNTNull() {
                return this.IsNull(this.tableUSERS.ORDERCOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetORDERCOUNTNull() {
                this[this.tableUSERS.ORDERCOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPAYMONEYNull() {
                return this.IsNull(this.tableUSERS.PAYMONEYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPAYMONEYNull() {
                this[this.tableUSERS.PAYMONEYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BASKETRow[] GetBASKETRows() {
                if ((this.Table.ChildRelations["BASKET_FK2"] == null)) {
                    return new BASKETRow[0];
                }
                else {
                    return ((BASKETRow[])(base.GetChildRows(this.Table.ChildRelations["BASKET_FK2"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ORDERD_PRODRow[] GetORDERD_PRODRows() {
                if ((this.Table.ChildRelations["ORDERD_PROD_FK1"] == null)) {
                    return new ORDERD_PRODRow[0];
                }
                else {
                    return ((ORDERD_PRODRow[])(base.GetChildRows(this.Table.ChildRelations["ORDERD_PROD_FK1"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BASKETRow : global::System.Data.DataRow {
            
            private BASKETDataTable tableBASKET;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BASKETRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBASKET = ((BASKETDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string USER_ID {
                get {
                    return ((string)(this[this.tableBASKET.USER_IDColumn]));
                }
                set {
                    this[this.tableBASKET.USER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PROD_ID {
                get {
                    return ((string)(this[this.tableBASKET.PROD_IDColumn]));
                }
                set {
                    this[this.tableBASKET.PROD_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string STOR_NAME {
                get {
                    return ((string)(this[this.tableBASKET.STOR_NAMEColumn]));
                }
                set {
                    this[this.tableBASKET.STOR_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PROD_PRICE {
                get {
                    return ((decimal)(this[this.tableBASKET.PROD_PRICEColumn]));
                }
                set {
                    this[this.tableBASKET.PROD_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PROD_KIND {
                get {
                    return ((string)(this[this.tableBASKET.PROD_KINDColumn]));
                }
                set {
                    this[this.tableBASKET.PROD_KINDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PROD_NAME {
                get {
                    return ((string)(this[this.tableBASKET.PROD_NAMEColumn]));
                }
                set {
                    this[this.tableBASKET.PROD_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PROD_COUNT {
                get {
                    return ((decimal)(this[this.tableBASKET.PROD_COUNTColumn]));
                }
                set {
                    this[this.tableBASKET.PROD_COUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOTAL_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableBASKET.TOTAL_PRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'BASKET\' 테이블의 \'TOTAL_PRICE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableBASKET.TOTAL_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public USERSRow USERSRow {
                get {
                    return ((USERSRow)(this.GetParentRow(this.Table.ParentRelations["BASKET_FK2"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["BASKET_FK2"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PRODUCTSRow PRODUCTSRow {
                get {
                    return ((PRODUCTSRow)(this.GetParentRow(this.Table.ParentRelations["BASKET_FK3"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["BASKET_FK3"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public STORERow STORERow {
                get {
                    return ((STORERow)(this.GetParentRow(this.Table.ParentRelations["BASKET_FK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["BASKET_FK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTOTAL_PRICENull() {
                return this.IsNull(this.tableBASKET.TOTAL_PRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTOTAL_PRICENull() {
                this[this.tableBASKET.TOTAL_PRICEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ORDERD_PRODRow : global::System.Data.DataRow {
            
            private ORDERD_PRODDataTable tableORDERD_PROD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ORDERD_PRODRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableORDERD_PROD = ((ORDERD_PRODDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ORDER_ID {
                get {
                    return ((decimal)(this[this.tableORDERD_PROD.ORDER_IDColumn]));
                }
                set {
                    this[this.tableORDERD_PROD.ORDER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PROD_ID {
                get {
                    return ((string)(this[this.tableORDERD_PROD.PROD_IDColumn]));
                }
                set {
                    this[this.tableORDERD_PROD.PROD_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string STOR_NAME {
                get {
                    return ((string)(this[this.tableORDERD_PROD.STOR_NAMEColumn]));
                }
                set {
                    this[this.tableORDERD_PROD.STOR_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string USER_ID {
                get {
                    return ((string)(this[this.tableORDERD_PROD.USER_IDColumn]));
                }
                set {
                    this[this.tableORDERD_PROD.USER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PROD_PRICE {
                get {
                    return ((decimal)(this[this.tableORDERD_PROD.PROD_PRICEColumn]));
                }
                set {
                    this[this.tableORDERD_PROD.PROD_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PROD_KIND {
                get {
                    return ((string)(this[this.tableORDERD_PROD.PROD_KINDColumn]));
                }
                set {
                    this[this.tableORDERD_PROD.PROD_KINDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PROD_NAME {
                get {
                    return ((string)(this[this.tableORDERD_PROD.PROD_NAMEColumn]));
                }
                set {
                    this[this.tableORDERD_PROD.PROD_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ORDER_OK {
                get {
                    return ((string)(this[this.tableORDERD_PROD.ORDER_OKColumn]));
                }
                set {
                    this[this.tableORDERD_PROD.ORDER_OKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PROD_COUNT {
                get {
                    return ((string)(this[this.tableORDERD_PROD.PROD_COUNTColumn]));
                }
                set {
                    this[this.tableORDERD_PROD.PROD_COUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SELLER_ID {
                get {
                    try {
                        return ((string)(this[this.tableORDERD_PROD.SELLER_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ORDERD_PROD\' 테이블의 \'SELLER_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableORDERD_PROD.SELLER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOTAL_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableORDERD_PROD.TOTAL_PRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ORDERD_PROD\' 테이블의 \'TOTAL_PRICE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableORDERD_PROD.TOTAL_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ORDER_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableORDERD_PROD.ORDER_DATEColumn]));
                }
                set {
                    this[this.tableORDERD_PROD.ORDER_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public USERSRow USERSRow {
                get {
                    return ((USERSRow)(this.GetParentRow(this.Table.ParentRelations["ORDERD_PROD_FK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ORDERD_PROD_FK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PRODUCTSRow PRODUCTSRow {
                get {
                    return ((PRODUCTSRow)(this.GetParentRow(this.Table.ParentRelations["ORDERD_PROD_FK3"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ORDERD_PROD_FK3"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public STORERow STORERow {
                get {
                    return ((STORERow)(this.GetParentRow(this.Table.ParentRelations["ORDERD_PROD_FK2"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ORDERD_PROD_FK2"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSELLER_IDNull() {
                return this.IsNull(this.tableORDERD_PROD.SELLER_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSELLER_IDNull() {
                this[this.tableORDERD_PROD.SELLER_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTOTAL_PRICENull() {
                return this.IsNull(this.tableORDERD_PROD.TOTAL_PRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTOTAL_PRICENull() {
                this[this.tableORDERD_PROD.TOTAL_PRICEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class NOTICERow : global::System.Data.DataRow {
            
            private NOTICEDataTable tableNOTICE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal NOTICERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNOTICE = ((NOTICEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOTICE_ID {
                get {
                    return ((string)(this[this.tableNOTICE.NOTICE_IDColumn]));
                }
                set {
                    this[this.tableNOTICE.NOTICE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOTICE_TITLE {
                get {
                    try {
                        return ((string)(this[this.tableNOTICE.NOTICE_TITLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'NOTICE\' 테이블의 \'NOTICE_TITLE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableNOTICE.NOTICE_TITLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOTICE_CONTENT {
                get {
                    try {
                        return ((string)(this[this.tableNOTICE.NOTICE_CONTENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'NOTICE\' 테이블의 \'NOTICE_CONTENT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableNOTICE.NOTICE_CONTENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNOTICE_TITLENull() {
                return this.IsNull(this.tableNOTICE.NOTICE_TITLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNOTICE_TITLENull() {
                this[this.tableNOTICE.NOTICE_TITLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNOTICE_CONTENTNull() {
                return this.IsNull(this.tableNOTICE.NOTICE_CONTENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNOTICE_CONTENTNull() {
                this[this.tableNOTICE.NOTICE_CONTENTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class STORERow : global::System.Data.DataRow {
            
            private STOREDataTable tableSTORE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal STORERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSTORE = ((STOREDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string STOR_NAME {
                get {
                    return ((string)(this[this.tableSTORE.STOR_NAMEColumn]));
                }
                set {
                    this[this.tableSTORE.STOR_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOTAL_SALE {
                get {
                    try {
                        return ((decimal)(this[this.tableSTORE.TOTAL_SALEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'STORE\' 테이블의 \'TOTAL_SALE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSTORE.TOTAL_SALEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTOTAL_SALENull() {
                return this.IsNull(this.tableSTORE.TOTAL_SALEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTOTAL_SALENull() {
                this[this.tableSTORE.TOTAL_SALEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SELLERRow[] GetSELLERRows() {
                if ((this.Table.ChildRelations["SELLER_FK1"] == null)) {
                    return new SELLERRow[0];
                }
                else {
                    return ((SELLERRow[])(base.GetChildRows(this.Table.ChildRelations["SELLER_FK1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BASKETRow[] GetBASKETRows() {
                if ((this.Table.ChildRelations["BASKET_FK1"] == null)) {
                    return new BASKETRow[0];
                }
                else {
                    return ((BASKETRow[])(base.GetChildRows(this.Table.ChildRelations["BASKET_FK1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ORDERD_PRODRow[] GetORDERD_PRODRows() {
                if ((this.Table.ChildRelations["ORDERD_PROD_FK2"] == null)) {
                    return new ORDERD_PRODRow[0];
                }
                else {
                    return ((ORDERD_PRODRow[])(base.GetChildRows(this.Table.ChildRelations["ORDERD_PROD_FK2"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class VIEW3Row : global::System.Data.DataRow {
            
            private VIEW3DataTable tableVIEW3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal VIEW3Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVIEW3 = ((VIEW3DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ORDER_ID {
                get {
                    return ((decimal)(this[this.tableVIEW3.ORDER_IDColumn]));
                }
                set {
                    this[this.tableVIEW3.ORDER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PROD_ID {
                get {
                    return ((string)(this[this.tableVIEW3.PROD_IDColumn]));
                }
                set {
                    this[this.tableVIEW3.PROD_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string STOR_NAME {
                get {
                    return ((string)(this[this.tableVIEW3.STOR_NAMEColumn]));
                }
                set {
                    this[this.tableVIEW3.STOR_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string USER_ID {
                get {
                    return ((string)(this[this.tableVIEW3.USER_IDColumn]));
                }
                set {
                    this[this.tableVIEW3.USER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PROD_PRICE {
                get {
                    return ((decimal)(this[this.tableVIEW3.PROD_PRICEColumn]));
                }
                set {
                    this[this.tableVIEW3.PROD_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ORDER_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableVIEW3.ORDER_DATEColumn]));
                }
                set {
                    this[this.tableVIEW3.ORDER_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PROD_KIND {
                get {
                    return ((string)(this[this.tableVIEW3.PROD_KINDColumn]));
                }
                set {
                    this[this.tableVIEW3.PROD_KINDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PROD_NAME {
                get {
                    return ((string)(this[this.tableVIEW3.PROD_NAMEColumn]));
                }
                set {
                    this[this.tableVIEW3.PROD_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ORDER_OK {
                get {
                    return ((string)(this[this.tableVIEW3.ORDER_OKColumn]));
                }
                set {
                    this[this.tableVIEW3.ORDER_OKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PROD_COUNT {
                get {
                    return ((string)(this[this.tableVIEW3.PROD_COUNTColumn]));
                }
                set {
                    this[this.tableVIEW3.PROD_COUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SELLER_ID {
                get {
                    try {
                        return ((string)(this[this.tableVIEW3.SELLER_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'VIEW3\' 테이블의 \'SELLER_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableVIEW3.SELLER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOTAL_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableVIEW3.TOTAL_PRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'VIEW3\' 테이블의 \'TOTAL_PRICE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableVIEW3.TOTAL_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSELLER_IDNull() {
                return this.IsNull(this.tableVIEW3.SELLER_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSELLER_IDNull() {
                this[this.tableVIEW3.SELLER_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTOTAL_PRICENull() {
                return this.IsNull(this.tableVIEW3.TOTAL_PRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTOTAL_PRICENull() {
                this[this.tableVIEW3.TOTAL_PRICEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class NEWPRODRow : global::System.Data.DataRow {
            
            private NEWPRODDataTable tableNEWPROD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal NEWPRODRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNEWPROD = ((NEWPRODDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PROD_ID {
                get {
                    return ((string)(this[this.tableNEWPROD.PROD_IDColumn]));
                }
                set {
                    this[this.tableNEWPROD.PROD_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ORDER_COUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableNEWPROD.ORDER_COUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'NEWPROD\' 테이블의 \'ORDER_COUNT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableNEWPROD.ORDER_COUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsORDER_COUNTNull() {
                return this.IsNull(this.tableNEWPROD.ORDER_COUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetORDER_COUNTNull() {
                this[this.tableNEWPROD.ORDER_COUNTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PROD_REFUNDRow : global::System.Data.DataRow {
            
            private PROD_REFUNDDataTable tablePROD_REFUND;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PROD_REFUNDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePROD_REFUND = ((PROD_REFUNDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PROD_ID {
                get {
                    return ((string)(this[this.tablePROD_REFUND.PROD_IDColumn]));
                }
                set {
                    this[this.tablePROD_REFUND.PROD_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal REFUND_COUNT {
                get {
                    try {
                        return ((decimal)(this[this.tablePROD_REFUND.REFUND_COUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'PROD_REFUND\' 테이블의 \'REFUND_COUNT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tablePROD_REFUND.REFUND_COUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsREFUND_COUNTNull() {
                return this.IsNull(this.tablePROD_REFUND.REFUND_COUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetREFUND_COUNTNull() {
                this[this.tablePROD_REFUND.REFUND_COUNTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ADMINRowChangeEvent : global::System.EventArgs {
            
            private ADMINRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ADMINRowChangeEvent(ADMINRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ADMINRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class PRODUCTSRowChangeEvent : global::System.EventArgs {
            
            private PRODUCTSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PRODUCTSRowChangeEvent(PRODUCTSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PRODUCTSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class REVIEWRowChangeEvent : global::System.EventArgs {
            
            private REVIEWRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REVIEWRowChangeEvent(REVIEWRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public REVIEWRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SELLERRowChangeEvent : global::System.EventArgs {
            
            private SELLERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SELLERRowChangeEvent(SELLERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SELLERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class USERSRowChangeEvent : global::System.EventArgs {
            
            private USERSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public USERSRowChangeEvent(USERSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public USERSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class BASKETRowChangeEvent : global::System.EventArgs {
            
            private BASKETRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BASKETRowChangeEvent(BASKETRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BASKETRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ORDERD_PRODRowChangeEvent : global::System.EventArgs {
            
            private ORDERD_PRODRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ORDERD_PRODRowChangeEvent(ORDERD_PRODRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ORDERD_PRODRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class NOTICERowChangeEvent : global::System.EventArgs {
            
            private NOTICERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public NOTICERowChangeEvent(NOTICERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public NOTICERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class STORERowChangeEvent : global::System.EventArgs {
            
            private STORERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public STORERowChangeEvent(STORERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public STORERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class VIEW3RowChangeEvent : global::System.EventArgs {
            
            private VIEW3Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VIEW3RowChangeEvent(VIEW3Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VIEW3Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class NEWPRODRowChangeEvent : global::System.EventArgs {
            
            private NEWPRODRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public NEWPRODRowChangeEvent(NEWPRODRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public NEWPRODRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class PROD_REFUNDRowChangeEvent : global::System.EventArgs {
            
            private PROD_REFUNDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PROD_REFUNDRowChangeEvent(PROD_REFUNDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PROD_REFUNDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace DBP_FINAL_5532437.DataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ADMINTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ADMINTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ADMIN";
            tableMapping.ColumnMappings.Add("ADMIN_ID", "ADMIN_ID");
            tableMapping.ColumnMappings.Add("ADMIN_PASSWORD", "ADMIN_PASSWORD");
            tableMapping.ColumnMappings.Add("ADMIN_NAME", "ADMIN_NAME");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"S5532437\".\"ADMIN\" WHERE ((\"ADMIN_ID\" = :Original_ADMIN_ID) AND (\"ADM" +
                "IN_PASSWORD\" = :Original_ADMIN_PASSWORD) AND (\"ADMIN_NAME\" = :Original_ADMIN_NAM" +
                "E))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ADMIN_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "ADMIN_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ADMIN_PASSWORD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "ADMIN_PASSWORD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ADMIN_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "ADMIN_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"S5532437\".\"ADMIN\" (\"ADMIN_ID\", \"ADMIN_PASSWORD\", \"ADMIN_NAME\") VALUE" +
                "S (:ADMIN_ID, :ADMIN_PASSWORD, :ADMIN_NAME)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ADMIN_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "ADMIN_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ADMIN_PASSWORD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "ADMIN_PASSWORD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ADMIN_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "ADMIN_NAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"S5532437\".\"ADMIN\" SET \"ADMIN_ID\" = :ADMIN_ID, \"ADMIN_PASSWORD\" = :ADMIN_P" +
                "ASSWORD, \"ADMIN_NAME\" = :ADMIN_NAME WHERE ((\"ADMIN_ID\" = :Original_ADMIN_ID) AND" +
                " (\"ADMIN_PASSWORD\" = :Original_ADMIN_PASSWORD) AND (\"ADMIN_NAME\" = :Original_ADM" +
                "IN_NAME))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ADMIN_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "ADMIN_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ADMIN_PASSWORD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "ADMIN_PASSWORD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ADMIN_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "ADMIN_NAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ADMIN_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "ADMIN_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ADMIN_PASSWORD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "ADMIN_PASSWORD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ADMIN_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "ADMIN_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::DBP_FINAL_5532437.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ADMIN_ID, ADMIN_PASSWORD, ADMIN_NAME FROM S5532437.ADMIN";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.ADMINDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.ADMINDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.ADMINDataTable dataTable = new DataSet1.ADMINDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.ADMINDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ADMIN");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_ADMIN_ID, string Original_ADMIN_PASSWORD, string Original_ADMIN_NAME) {
            if ((Original_ADMIN_ID == null)) {
                throw new global::System.ArgumentNullException("Original_ADMIN_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ADMIN_ID));
            }
            if ((Original_ADMIN_PASSWORD == null)) {
                throw new global::System.ArgumentNullException("Original_ADMIN_PASSWORD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ADMIN_PASSWORD));
            }
            if ((Original_ADMIN_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_ADMIN_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ADMIN_NAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ADMIN_ID, string ADMIN_PASSWORD, string ADMIN_NAME) {
            if ((ADMIN_ID == null)) {
                throw new global::System.ArgumentNullException("ADMIN_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ADMIN_ID));
            }
            if ((ADMIN_PASSWORD == null)) {
                throw new global::System.ArgumentNullException("ADMIN_PASSWORD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ADMIN_PASSWORD));
            }
            if ((ADMIN_NAME == null)) {
                throw new global::System.ArgumentNullException("ADMIN_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ADMIN_NAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ADMIN_ID, string ADMIN_PASSWORD, string ADMIN_NAME, string Original_ADMIN_ID, string Original_ADMIN_PASSWORD, string Original_ADMIN_NAME) {
            if ((ADMIN_ID == null)) {
                throw new global::System.ArgumentNullException("ADMIN_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ADMIN_ID));
            }
            if ((ADMIN_PASSWORD == null)) {
                throw new global::System.ArgumentNullException("ADMIN_PASSWORD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ADMIN_PASSWORD));
            }
            if ((ADMIN_NAME == null)) {
                throw new global::System.ArgumentNullException("ADMIN_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ADMIN_NAME));
            }
            if ((Original_ADMIN_ID == null)) {
                throw new global::System.ArgumentNullException("Original_ADMIN_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_ADMIN_ID));
            }
            if ((Original_ADMIN_PASSWORD == null)) {
                throw new global::System.ArgumentNullException("Original_ADMIN_PASSWORD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_ADMIN_PASSWORD));
            }
            if ((Original_ADMIN_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_ADMIN_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_ADMIN_NAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ADMIN_PASSWORD, string ADMIN_NAME, string Original_ADMIN_ID, string Original_ADMIN_PASSWORD, string Original_ADMIN_NAME) {
            return this.Update(Original_ADMIN_ID, ADMIN_PASSWORD, ADMIN_NAME, Original_ADMIN_ID, Original_ADMIN_PASSWORD, Original_ADMIN_NAME);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PRODUCTSTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public PRODUCTSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PRODUCTS";
            tableMapping.ColumnMappings.Add("PROD_ID", "PROD_ID");
            tableMapping.ColumnMappings.Add("STOR_NAME", "STOR_NAME");
            tableMapping.ColumnMappings.Add("PROD_NAME", "PROD_NAME");
            tableMapping.ColumnMappings.Add("PROD_KIND", "PROD_KIND");
            tableMapping.ColumnMappings.Add("PROD_PRICE", "PROD_PRICE");
            tableMapping.ColumnMappings.Add("PROD_COUNT", "PROD_COUNT");
            tableMapping.ColumnMappings.Add("ORDER_COUNT", "ORDER_COUNT");
            tableMapping.ColumnMappings.Add("REFUND_COUNT", "REFUND_COUNT");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""S5532437"".""PRODUCTS"" WHERE ((""PROD_ID"" = :Original_PROD_ID) AND (""STOR_NAME"" = :Original_STOR_NAME) AND (""PROD_NAME"" = :Original_PROD_NAME) AND (""PROD_KIND"" = :Original_PROD_KIND) AND (""PROD_PRICE"" = :Original_PROD_PRICE) AND (""PROD_COUNT"" = :Original_PROD_COUNT) AND ((:IsNull_ORDER_COUNT = 1 AND ""ORDER_COUNT"" IS NULL) OR (""ORDER_COUNT"" = :Original_ORDER_COUNT)) AND ((:IsNull_REFUND_COUNT = 1 AND ""REFUND_COUNT"" IS NULL) OR (""REFUND_COUNT"" = :Original_REFUND_COUNT)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_STOR_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "STOR_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_KIND";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_KIND";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_PRICE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PROD_PRICE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_COUNT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_COUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ORDER_COUNT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_COUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ORDER_COUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_COUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REFUND_COUNT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "REFUND_COUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REFUND_COUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "REFUND_COUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"S5532437\".\"PRODUCTS\" (\"PROD_ID\", \"STOR_NAME\", \"PROD_NAME\", \"PROD_KIN" +
                "D\", \"PROD_PRICE\", \"PROD_COUNT\", \"ORDER_COUNT\", \"REFUND_COUNT\") VALUES (:PROD_ID," +
                " :STOR_NAME, :PROD_NAME, :PROD_KIND, :PROD_PRICE, :PROD_COUNT, :ORDER_COUNT, :RE" +
                "FUND_COUNT)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "STOR_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "STOR_NAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_NAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_KIND";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_KIND";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_PRICE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PROD_PRICE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_COUNT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_COUNT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ORDER_COUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_COUNT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REFUND_COUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "REFUND_COUNT";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""S5532437"".""PRODUCTS"" SET ""PROD_ID"" = :PROD_ID, ""STOR_NAME"" = :STOR_NAME, ""PROD_NAME"" = :PROD_NAME, ""PROD_KIND"" = :PROD_KIND, ""PROD_PRICE"" = :PROD_PRICE, ""PROD_COUNT"" = :PROD_COUNT, ""ORDER_COUNT"" = :ORDER_COUNT, ""REFUND_COUNT"" = :REFUND_COUNT WHERE ((""PROD_ID"" = :Original_PROD_ID) AND (""STOR_NAME"" = :Original_STOR_NAME) AND (""PROD_NAME"" = :Original_PROD_NAME) AND (""PROD_KIND"" = :Original_PROD_KIND) AND (""PROD_PRICE"" = :Original_PROD_PRICE) AND (""PROD_COUNT"" = :Original_PROD_COUNT) AND ((:IsNull_ORDER_COUNT = 1 AND ""ORDER_COUNT"" IS NULL) OR (""ORDER_COUNT"" = :Original_ORDER_COUNT)) AND ((:IsNull_REFUND_COUNT = 1 AND ""REFUND_COUNT"" IS NULL) OR (""REFUND_COUNT"" = :Original_REFUND_COUNT)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "STOR_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "STOR_NAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_NAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_KIND";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_KIND";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_PRICE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PROD_PRICE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_COUNT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_COUNT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ORDER_COUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_COUNT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REFUND_COUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "REFUND_COUNT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_STOR_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "STOR_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_KIND";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_KIND";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_PRICE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PROD_PRICE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_COUNT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_COUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ORDER_COUNT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_COUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ORDER_COUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_COUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REFUND_COUNT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "REFUND_COUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REFUND_COUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "REFUND_COUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::DBP_FINAL_5532437.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[4];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PROD_ID, STOR_NAME, PROD_NAME, PROD_KIND, PROD_PRICE, PROD_COUNT, ORDER_CO" +
                "UNT, REFUND_COUNT FROM S5532437.PRODUCTS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT prod_seq.nextval FROM dual";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT PROD_COUNT, ORDER_COUNT, REFUND_COUNT FROM S5532437.PRODUCTS WHERE (PROD_I" +
                "D = :PARAM)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_ID";
            this._commandCollection[2].Parameters.Add(param);
            this._commandCollection[3] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "INSERT INTO \"S5532437\".\"PRODUCTS\" (\"PROD_ID\", \"STOR_NAME\", \"PROD_NAME\", \"PROD_KIN" +
                "D\", \"PROD_PRICE\", \"PROD_COUNT\", \"ORDER_COUNT\", \"REFUND_COUNT\") VALUES (:PROD_ID," +
                " :STOR_NAME, :PROD_NAME, :PROD_KIND, :PROD_PRICE, :PROD_COUNT, :ORDER_COUNT, :RE" +
                "FUND_COUNT)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PROD_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_ID";
            this._commandCollection[3].Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":STOR_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "STOR_NAME";
            this._commandCollection[3].Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PROD_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_NAME";
            this._commandCollection[3].Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PROD_KIND";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_KIND";
            this._commandCollection[3].Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PROD_PRICE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PROD_PRICE";
            this._commandCollection[3].Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PROD_COUNT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_COUNT";
            this._commandCollection[3].Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":ORDER_COUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_COUNT";
            this._commandCollection[3].Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":REFUND_COUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "REFUND_COUNT";
            this._commandCollection[3].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.PRODUCTSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.PRODUCTSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.PRODUCTSDataTable dataTable = new DataSet1.PRODUCTSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.PRODUCTSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "PRODUCTS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_PROD_ID, string Original_STOR_NAME, string Original_PROD_NAME, string Original_PROD_KIND, decimal Original_PROD_PRICE, string Original_PROD_COUNT, global::System.Nullable<decimal> Original_ORDER_COUNT, global::System.Nullable<decimal> Original_REFUND_COUNT) {
            if ((Original_PROD_ID == null)) {
                throw new global::System.ArgumentNullException("Original_PROD_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_PROD_ID));
            }
            if ((Original_STOR_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_STOR_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_STOR_NAME));
            }
            if ((Original_PROD_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_PROD_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_PROD_NAME));
            }
            if ((Original_PROD_KIND == null)) {
                throw new global::System.ArgumentNullException("Original_PROD_KIND");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_PROD_KIND));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_PROD_PRICE));
            if ((Original_PROD_COUNT == null)) {
                throw new global::System.ArgumentNullException("Original_PROD_COUNT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_PROD_COUNT));
            }
            if ((Original_ORDER_COUNT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_ORDER_COUNT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_REFUND_COUNT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_REFUND_COUNT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string PROD_ID, string STOR_NAME, string PROD_NAME, string PROD_KIND, decimal PROD_PRICE, string PROD_COUNT, global::System.Nullable<decimal> ORDER_COUNT, global::System.Nullable<decimal> REFUND_COUNT) {
            if ((PROD_ID == null)) {
                throw new global::System.ArgumentNullException("PROD_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(PROD_ID));
            }
            if ((STOR_NAME == null)) {
                throw new global::System.ArgumentNullException("STOR_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(STOR_NAME));
            }
            if ((PROD_NAME == null)) {
                throw new global::System.ArgumentNullException("PROD_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PROD_NAME));
            }
            if ((PROD_KIND == null)) {
                throw new global::System.ArgumentNullException("PROD_KIND");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(PROD_KIND));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(PROD_PRICE));
            if ((PROD_COUNT == null)) {
                throw new global::System.ArgumentNullException("PROD_COUNT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(PROD_COUNT));
            }
            if ((ORDER_COUNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(ORDER_COUNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((REFUND_COUNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(REFUND_COUNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string PROD_ID, 
                    string STOR_NAME, 
                    string PROD_NAME, 
                    string PROD_KIND, 
                    decimal PROD_PRICE, 
                    string PROD_COUNT, 
                    global::System.Nullable<decimal> ORDER_COUNT, 
                    global::System.Nullable<decimal> REFUND_COUNT, 
                    string Original_PROD_ID, 
                    string Original_STOR_NAME, 
                    string Original_PROD_NAME, 
                    string Original_PROD_KIND, 
                    decimal Original_PROD_PRICE, 
                    string Original_PROD_COUNT, 
                    global::System.Nullable<decimal> Original_ORDER_COUNT, 
                    global::System.Nullable<decimal> Original_REFUND_COUNT) {
            if ((PROD_ID == null)) {
                throw new global::System.ArgumentNullException("PROD_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(PROD_ID));
            }
            if ((STOR_NAME == null)) {
                throw new global::System.ArgumentNullException("STOR_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(STOR_NAME));
            }
            if ((PROD_NAME == null)) {
                throw new global::System.ArgumentNullException("PROD_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(PROD_NAME));
            }
            if ((PROD_KIND == null)) {
                throw new global::System.ArgumentNullException("PROD_KIND");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(PROD_KIND));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(PROD_PRICE));
            if ((PROD_COUNT == null)) {
                throw new global::System.ArgumentNullException("PROD_COUNT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(PROD_COUNT));
            }
            if ((ORDER_COUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(ORDER_COUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((REFUND_COUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(REFUND_COUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_PROD_ID == null)) {
                throw new global::System.ArgumentNullException("Original_PROD_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_PROD_ID));
            }
            if ((Original_STOR_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_STOR_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_STOR_NAME));
            }
            if ((Original_PROD_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_PROD_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_PROD_NAME));
            }
            if ((Original_PROD_KIND == null)) {
                throw new global::System.ArgumentNullException("Original_PROD_KIND");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_PROD_KIND));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_PROD_PRICE));
            if ((Original_PROD_COUNT == null)) {
                throw new global::System.ArgumentNullException("Original_PROD_COUNT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_PROD_COUNT));
            }
            if ((Original_ORDER_COUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_ORDER_COUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_REFUND_COUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(Original_REFUND_COUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string STOR_NAME, string PROD_NAME, string PROD_KIND, decimal PROD_PRICE, string PROD_COUNT, global::System.Nullable<decimal> ORDER_COUNT, global::System.Nullable<decimal> REFUND_COUNT, string Original_PROD_ID, string Original_STOR_NAME, string Original_PROD_NAME, string Original_PROD_KIND, decimal Original_PROD_PRICE, string Original_PROD_COUNT, global::System.Nullable<decimal> Original_ORDER_COUNT, global::System.Nullable<decimal> Original_REFUND_COUNT) {
            return this.Update(Original_PROD_ID, STOR_NAME, PROD_NAME, PROD_KIND, PROD_PRICE, PROD_COUNT, ORDER_COUNT, REFUND_COUNT, Original_PROD_ID, Original_STOR_NAME, Original_PROD_NAME, Original_PROD_KIND, Original_PROD_PRICE, Original_PROD_COUNT, Original_ORDER_COUNT, Original_REFUND_COUNT);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<decimal> fillbyseq() {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = this.CommandCollection[1];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<decimal>();
            }
            else {
                return new global::System.Nullable<decimal>(((decimal)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object GET_PROD_COUNT(string PARAM) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = this.CommandCollection[2];
            if ((PARAM == null)) {
                throw new global::System.ArgumentNullException("PARAM");
            }
            else {
                command.Parameters[0].Value = ((string)(PARAM));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertQuery(string PROD_ID, string STOR_NAME, string PROD_NAME, string PROD_KIND, decimal PROD_PRICE, string PROD_COUNT, global::System.Nullable<decimal> ORDER_COUNT, global::System.Nullable<decimal> REFUND_COUNT) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = this.CommandCollection[3];
            if ((PROD_ID == null)) {
                throw new global::System.ArgumentNullException("PROD_ID");
            }
            else {
                command.Parameters[0].Value = ((string)(PROD_ID));
            }
            if ((STOR_NAME == null)) {
                throw new global::System.ArgumentNullException("STOR_NAME");
            }
            else {
                command.Parameters[1].Value = ((string)(STOR_NAME));
            }
            if ((PROD_NAME == null)) {
                throw new global::System.ArgumentNullException("PROD_NAME");
            }
            else {
                command.Parameters[2].Value = ((string)(PROD_NAME));
            }
            if ((PROD_KIND == null)) {
                throw new global::System.ArgumentNullException("PROD_KIND");
            }
            else {
                command.Parameters[3].Value = ((string)(PROD_KIND));
            }
            command.Parameters[4].Value = ((decimal)(PROD_PRICE));
            if ((PROD_COUNT == null)) {
                throw new global::System.ArgumentNullException("PROD_COUNT");
            }
            else {
                command.Parameters[5].Value = ((string)(PROD_COUNT));
            }
            if ((ORDER_COUNT.HasValue == true)) {
                command.Parameters[6].Value = ((decimal)(ORDER_COUNT.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((REFUND_COUNT.HasValue == true)) {
                command.Parameters[7].Value = ((decimal)(REFUND_COUNT.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class REVIEWTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public REVIEWTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "REVIEW";
            tableMapping.ColumnMappings.Add("REVIEW_ID", "REVIEW_ID");
            tableMapping.ColumnMappings.Add("PROD_ID", "PROD_ID");
            tableMapping.ColumnMappings.Add("REVIEW_TITLE", "REVIEW_TITLE");
            tableMapping.ColumnMappings.Add("REVIEW_CONTENT", "REVIEW_CONTENT");
            tableMapping.ColumnMappings.Add("USER_ID", "USER_ID");
            tableMapping.ColumnMappings.Add("REVIEW_DATE", "REVIEW_DATE");
            tableMapping.ColumnMappings.Add("USER_NAME", "USER_NAME");
            tableMapping.ColumnMappings.Add("PROD_NAME", "PROD_NAME");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""S5532437"".""REVIEW"" WHERE ((""REVIEW_ID"" = :Original_REVIEW_ID) AND (""PROD_ID"" = :Original_PROD_ID) AND (""REVIEW_TITLE"" = :Original_REVIEW_TITLE) AND (""REVIEW_CONTENT"" = :Original_REVIEW_CONTENT) AND (""USER_ID"" = :Original_USER_ID) AND (""REVIEW_DATE"" = :Original_REVIEW_DATE) AND ((:IsNull_PROD_NAME = 1 AND ""PROD_NAME"" IS NULL) OR (""PROD_NAME"" = :Original_PROD_NAME)) AND ((:IsNull_USER_NAME = 1 AND ""USER_NAME"" IS NULL) OR (""USER_NAME"" = :Original_USER_NAME)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REVIEW_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "REVIEW_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REVIEW_TITLE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 999;
            param.IsNullable = true;
            param.SourceColumn = "REVIEW_TITLE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REVIEW_CONTENT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 999;
            param.IsNullable = true;
            param.SourceColumn = "REVIEW_CONTENT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_USER_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REVIEW_DATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "REVIEW_DATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_PROD_NAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_USER_NAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_USER_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"S5532437\".\"REVIEW\" (\"REVIEW_ID\", \"PROD_ID\", \"REVIEW_TITLE\", \"REVIEW_" +
                "CONTENT\", \"USER_ID\", \"REVIEW_DATE\", \"PROD_NAME\", \"USER_NAME\") VALUES (:REVIEW_ID" +
                ", :PROD_ID, :REVIEW_TITLE, :REVIEW_CONTENT, :USER_ID, :REVIEW_DATE, :PROD_NAME, " +
                ":USER_NAME)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REVIEW_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "REVIEW_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REVIEW_TITLE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 999;
            param.IsNullable = true;
            param.SourceColumn = "REVIEW_TITLE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REVIEW_CONTENT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 999;
            param.IsNullable = true;
            param.SourceColumn = "REVIEW_CONTENT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "USER_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REVIEW_DATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "REVIEW_DATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_NAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "USER_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_NAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""S5532437"".""REVIEW"" SET ""REVIEW_ID"" = :REVIEW_ID, ""PROD_ID"" = :PROD_ID, ""REVIEW_TITLE"" = :REVIEW_TITLE, ""REVIEW_CONTENT"" = :REVIEW_CONTENT, ""USER_ID"" = :USER_ID, ""REVIEW_DATE"" = :REVIEW_DATE, ""PROD_NAME"" = :PROD_NAME, ""USER_NAME"" = :USER_NAME WHERE ((""REVIEW_ID"" = :Original_REVIEW_ID) AND (""PROD_ID"" = :Original_PROD_ID) AND (""REVIEW_TITLE"" = :Original_REVIEW_TITLE) AND (""REVIEW_CONTENT"" = :Original_REVIEW_CONTENT) AND (""USER_ID"" = :Original_USER_ID) AND (""REVIEW_DATE"" = :Original_REVIEW_DATE) AND ((:IsNull_PROD_NAME = 1 AND ""PROD_NAME"" IS NULL) OR (""PROD_NAME"" = :Original_PROD_NAME)) AND ((:IsNull_USER_NAME = 1 AND ""USER_NAME"" IS NULL) OR (""USER_NAME"" = :Original_USER_NAME)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REVIEW_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "REVIEW_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REVIEW_TITLE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 999;
            param.IsNullable = true;
            param.SourceColumn = "REVIEW_TITLE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REVIEW_CONTENT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 999;
            param.IsNullable = true;
            param.SourceColumn = "REVIEW_CONTENT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "USER_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REVIEW_DATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "REVIEW_DATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_NAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "USER_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_NAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REVIEW_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "REVIEW_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REVIEW_TITLE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 999;
            param.IsNullable = true;
            param.SourceColumn = "REVIEW_TITLE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REVIEW_CONTENT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 999;
            param.IsNullable = true;
            param.SourceColumn = "REVIEW_CONTENT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_USER_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REVIEW_DATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "REVIEW_DATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_PROD_NAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_USER_NAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_USER_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::DBP_FINAL_5532437.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[2];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT REVIEW_ID, PROD_ID, REVIEW_TITLE, REVIEW_CONTENT, USER_ID, REVIEW_DATE, PR" +
                "OD_NAME, USER_NAME FROM S5532437.REVIEW";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT review_seq.nextval FROM dual";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.REVIEWDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.REVIEWDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.REVIEWDataTable dataTable = new DataSet1.REVIEWDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.REVIEWDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "REVIEW");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_REVIEW_ID, string Original_PROD_ID, string Original_REVIEW_TITLE, string Original_REVIEW_CONTENT, string Original_USER_ID, string Original_REVIEW_DATE, string Original_PROD_NAME, string Original_USER_NAME) {
            if ((Original_REVIEW_ID == null)) {
                throw new global::System.ArgumentNullException("Original_REVIEW_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_REVIEW_ID));
            }
            if ((Original_PROD_ID == null)) {
                throw new global::System.ArgumentNullException("Original_PROD_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_PROD_ID));
            }
            if ((Original_REVIEW_TITLE == null)) {
                throw new global::System.ArgumentNullException("Original_REVIEW_TITLE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_REVIEW_TITLE));
            }
            if ((Original_REVIEW_CONTENT == null)) {
                throw new global::System.ArgumentNullException("Original_REVIEW_CONTENT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_REVIEW_CONTENT));
            }
            if ((Original_USER_ID == null)) {
                throw new global::System.ArgumentNullException("Original_USER_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_USER_ID));
            }
            if ((Original_REVIEW_DATE == null)) {
                throw new global::System.ArgumentNullException("Original_REVIEW_DATE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_REVIEW_DATE));
            }
            if ((Original_PROD_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_PROD_NAME));
            }
            if ((Original_USER_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_USER_NAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string REVIEW_ID, string PROD_ID, string REVIEW_TITLE, string REVIEW_CONTENT, string USER_ID, string REVIEW_DATE, string PROD_NAME, string USER_NAME) {
            if ((REVIEW_ID == null)) {
                throw new global::System.ArgumentNullException("REVIEW_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(REVIEW_ID));
            }
            if ((PROD_ID == null)) {
                throw new global::System.ArgumentNullException("PROD_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PROD_ID));
            }
            if ((REVIEW_TITLE == null)) {
                throw new global::System.ArgumentNullException("REVIEW_TITLE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(REVIEW_TITLE));
            }
            if ((REVIEW_CONTENT == null)) {
                throw new global::System.ArgumentNullException("REVIEW_CONTENT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(REVIEW_CONTENT));
            }
            if ((USER_ID == null)) {
                throw new global::System.ArgumentNullException("USER_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(USER_ID));
            }
            if ((REVIEW_DATE == null)) {
                throw new global::System.ArgumentNullException("REVIEW_DATE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(REVIEW_DATE));
            }
            if ((PROD_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(PROD_NAME));
            }
            if ((USER_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(USER_NAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string REVIEW_ID, 
                    string PROD_ID, 
                    string REVIEW_TITLE, 
                    string REVIEW_CONTENT, 
                    string USER_ID, 
                    string REVIEW_DATE, 
                    string PROD_NAME, 
                    string USER_NAME, 
                    string Original_REVIEW_ID, 
                    string Original_PROD_ID, 
                    string Original_REVIEW_TITLE, 
                    string Original_REVIEW_CONTENT, 
                    string Original_USER_ID, 
                    string Original_REVIEW_DATE, 
                    string Original_PROD_NAME, 
                    string Original_USER_NAME) {
            if ((REVIEW_ID == null)) {
                throw new global::System.ArgumentNullException("REVIEW_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(REVIEW_ID));
            }
            if ((PROD_ID == null)) {
                throw new global::System.ArgumentNullException("PROD_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PROD_ID));
            }
            if ((REVIEW_TITLE == null)) {
                throw new global::System.ArgumentNullException("REVIEW_TITLE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(REVIEW_TITLE));
            }
            if ((REVIEW_CONTENT == null)) {
                throw new global::System.ArgumentNullException("REVIEW_CONTENT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(REVIEW_CONTENT));
            }
            if ((USER_ID == null)) {
                throw new global::System.ArgumentNullException("USER_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(USER_ID));
            }
            if ((REVIEW_DATE == null)) {
                throw new global::System.ArgumentNullException("REVIEW_DATE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(REVIEW_DATE));
            }
            if ((PROD_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(PROD_NAME));
            }
            if ((USER_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(USER_NAME));
            }
            if ((Original_REVIEW_ID == null)) {
                throw new global::System.ArgumentNullException("Original_REVIEW_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_REVIEW_ID));
            }
            if ((Original_PROD_ID == null)) {
                throw new global::System.ArgumentNullException("Original_PROD_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_PROD_ID));
            }
            if ((Original_REVIEW_TITLE == null)) {
                throw new global::System.ArgumentNullException("Original_REVIEW_TITLE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_REVIEW_TITLE));
            }
            if ((Original_REVIEW_CONTENT == null)) {
                throw new global::System.ArgumentNullException("Original_REVIEW_CONTENT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_REVIEW_CONTENT));
            }
            if ((Original_USER_ID == null)) {
                throw new global::System.ArgumentNullException("Original_USER_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_USER_ID));
            }
            if ((Original_REVIEW_DATE == null)) {
                throw new global::System.ArgumentNullException("Original_REVIEW_DATE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_REVIEW_DATE));
            }
            if ((Original_PROD_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_PROD_NAME));
            }
            if ((Original_USER_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_USER_NAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string PROD_ID, string REVIEW_TITLE, string REVIEW_CONTENT, string USER_ID, string REVIEW_DATE, string PROD_NAME, string USER_NAME, string Original_REVIEW_ID, string Original_PROD_ID, string Original_REVIEW_TITLE, string Original_REVIEW_CONTENT, string Original_USER_ID, string Original_REVIEW_DATE, string Original_PROD_NAME, string Original_USER_NAME) {
            return this.Update(Original_REVIEW_ID, PROD_ID, REVIEW_TITLE, REVIEW_CONTENT, USER_ID, REVIEW_DATE, PROD_NAME, USER_NAME, Original_REVIEW_ID, Original_PROD_ID, Original_REVIEW_TITLE, Original_REVIEW_CONTENT, Original_USER_ID, Original_REVIEW_DATE, Original_PROD_NAME, Original_USER_NAME);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object fillbyseq() {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = this.CommandCollection[1];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SELLERTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SELLERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SELLER";
            tableMapping.ColumnMappings.Add("SELLER_ID", "SELLER_ID");
            tableMapping.ColumnMappings.Add("SELLER_PASSWORD", "SELLER_PASSWORD");
            tableMapping.ColumnMappings.Add("STOR_NAME", "STOR_NAME");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"S5532437\".\"SELLER\" WHERE ((\"SELLER_ID\" = :Original_SELLER_ID) AND (\"" +
                "SELLER_PASSWORD\" = :Original_SELLER_PASSWORD) AND ((:IsNull_STOR_NAME = 1 AND \"S" +
                "TOR_NAME\" IS NULL) OR (\"STOR_NAME\" = :Original_STOR_NAME)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SELLER_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "SELLER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SELLER_PASSWORD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "SELLER_PASSWORD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_STOR_NAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "STOR_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_STOR_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "STOR_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"S5532437\".\"SELLER\" (\"SELLER_ID\", \"SELLER_PASSWORD\", \"STOR_NAME\") VAL" +
                "UES (:SELLER_ID, :SELLER_PASSWORD, :STOR_NAME)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SELLER_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "SELLER_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SELLER_PASSWORD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "SELLER_PASSWORD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "STOR_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "STOR_NAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""S5532437"".""SELLER"" SET ""SELLER_ID"" = :SELLER_ID, ""SELLER_PASSWORD"" = :SELLER_PASSWORD, ""STOR_NAME"" = :STOR_NAME WHERE ((""SELLER_ID"" = :Original_SELLER_ID) AND (""SELLER_PASSWORD"" = :Original_SELLER_PASSWORD) AND ((:IsNull_STOR_NAME = 1 AND ""STOR_NAME"" IS NULL) OR (""STOR_NAME"" = :Original_STOR_NAME)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SELLER_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "SELLER_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SELLER_PASSWORD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "SELLER_PASSWORD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "STOR_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "STOR_NAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SELLER_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "SELLER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SELLER_PASSWORD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "SELLER_PASSWORD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_STOR_NAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "STOR_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_STOR_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "STOR_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::DBP_FINAL_5532437.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SELLER_ID, SELLER_PASSWORD, STOR_NAME FROM S5532437.SELLER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.SELLERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.SELLERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.SELLERDataTable dataTable = new DataSet1.SELLERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.SELLERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "SELLER");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_SELLER_ID, string Original_SELLER_PASSWORD, string Original_STOR_NAME) {
            if ((Original_SELLER_ID == null)) {
                throw new global::System.ArgumentNullException("Original_SELLER_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SELLER_ID));
            }
            if ((Original_SELLER_PASSWORD == null)) {
                throw new global::System.ArgumentNullException("Original_SELLER_PASSWORD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_SELLER_PASSWORD));
            }
            if ((Original_STOR_NAME == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_STOR_NAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SELLER_ID, string SELLER_PASSWORD, string STOR_NAME) {
            if ((SELLER_ID == null)) {
                throw new global::System.ArgumentNullException("SELLER_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SELLER_ID));
            }
            if ((SELLER_PASSWORD == null)) {
                throw new global::System.ArgumentNullException("SELLER_PASSWORD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SELLER_PASSWORD));
            }
            if ((STOR_NAME == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(STOR_NAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SELLER_ID, string SELLER_PASSWORD, string STOR_NAME, string Original_SELLER_ID, string Original_SELLER_PASSWORD, string Original_STOR_NAME) {
            if ((SELLER_ID == null)) {
                throw new global::System.ArgumentNullException("SELLER_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SELLER_ID));
            }
            if ((SELLER_PASSWORD == null)) {
                throw new global::System.ArgumentNullException("SELLER_PASSWORD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SELLER_PASSWORD));
            }
            if ((STOR_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(STOR_NAME));
            }
            if ((Original_SELLER_ID == null)) {
                throw new global::System.ArgumentNullException("Original_SELLER_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_SELLER_ID));
            }
            if ((Original_SELLER_PASSWORD == null)) {
                throw new global::System.ArgumentNullException("Original_SELLER_PASSWORD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_SELLER_PASSWORD));
            }
            if ((Original_STOR_NAME == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_STOR_NAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SELLER_PASSWORD, string STOR_NAME, string Original_SELLER_ID, string Original_SELLER_PASSWORD, string Original_STOR_NAME) {
            return this.Update(Original_SELLER_ID, SELLER_PASSWORD, STOR_NAME, Original_SELLER_ID, Original_SELLER_PASSWORD, Original_STOR_NAME);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class USERSTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public USERSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "USERS";
            tableMapping.ColumnMappings.Add("USER_ID", "USER_ID");
            tableMapping.ColumnMappings.Add("USER_PASSWORD", "USER_PASSWORD");
            tableMapping.ColumnMappings.Add("USER_NAME", "USER_NAME");
            tableMapping.ColumnMappings.Add("USER_BIRTH", "USER_BIRTH");
            tableMapping.ColumnMappings.Add("USER_TELE", "USER_TELE");
            tableMapping.ColumnMappings.Add("USER_ADDR", "USER_ADDR");
            tableMapping.ColumnMappings.Add("USER_EMAIL", "USER_EMAIL");
            tableMapping.ColumnMappings.Add("USER_NOT", "USER_NOT");
            tableMapping.ColumnMappings.Add("REFUND_COUNT", "REFUND_COUNT");
            tableMapping.ColumnMappings.Add("USER_GRADE", "USER_GRADE");
            tableMapping.ColumnMappings.Add("ORDERCOUNT", "ORDERCOUNT");
            tableMapping.ColumnMappings.Add("PAYMONEY", "PAYMONEY");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""S5532437"".""USERS"" WHERE ((""USER_ID"" = :Original_USER_ID) AND (""USER_PASSWORD"" = :Original_USER_PASSWORD) AND (""USER_NAME"" = :Original_USER_NAME) AND (""USER_BIRTH"" = :Original_USER_BIRTH) AND (""USER_TELE"" = :Original_USER_TELE) AND (""USER_ADDR"" = :Original_USER_ADDR) AND (""USER_EMAIL"" = :Original_USER_EMAIL) AND (""USER_NOT"" = :Original_USER_NOT) AND ((:IsNull_REFUND_COUNT = 1 AND ""REFUND_COUNT"" IS NULL) OR (""REFUND_COUNT"" = :Original_REFUND_COUNT)) AND ((:IsNull_USER_GRADE = 1 AND ""USER_GRADE"" IS NULL) OR (""USER_GRADE"" = :Original_USER_GRADE)) AND ((:IsNull_ORDERCOUNT = 1 AND ""ORDERCOUNT"" IS NULL) OR (""ORDERCOUNT"" = :Original_ORDERCOUNT)) AND ((:IsNull_PAYMONEY = 1 AND ""PAYMONEY"" IS NULL) OR (""PAYMONEY"" = :Original_PAYMONEY)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_USER_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_USER_PASSWORD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_PASSWORD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_USER_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_USER_BIRTH";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_BIRTH";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_USER_TELE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_TELE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_USER_ADDR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ADDR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_USER_EMAIL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_EMAIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_USER_NOT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_NOT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REFUND_COUNT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "REFUND_COUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REFUND_COUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "REFUND_COUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_USER_GRADE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_GRADE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_USER_GRADE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_GRADE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ORDERCOUNT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDERCOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ORDERCOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDERCOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_PAYMONEY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PAYMONEY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PAYMONEY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PAYMONEY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""S5532437"".""USERS"" (""USER_ID"", ""USER_PASSWORD"", ""USER_NAME"", ""USER_BIRTH"", ""USER_TELE"", ""USER_ADDR"", ""USER_EMAIL"", ""USER_NOT"", ""REFUND_COUNT"", ""USER_GRADE"", ""ORDERCOUNT"", ""PAYMONEY"") VALUES (:USER_ID, :USER_PASSWORD, :USER_NAME, :USER_BIRTH, :USER_TELE, :USER_ADDR, :USER_EMAIL, :USER_NOT, :REFUND_COUNT, :USER_GRADE, :ORDERCOUNT, :PAYMONEY)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "USER_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "USER_PASSWORD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_PASSWORD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "USER_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_NAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "USER_BIRTH";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_BIRTH";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "USER_TELE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_TELE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "USER_ADDR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ADDR";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "USER_EMAIL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_EMAIL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "USER_NOT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_NOT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REFUND_COUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "REFUND_COUNT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "USER_GRADE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_GRADE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ORDERCOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDERCOUNT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PAYMONEY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PAYMONEY";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""S5532437"".""USERS"" SET ""USER_ID"" = :USER_ID, ""USER_PASSWORD"" = :USER_PASSWORD, ""USER_NAME"" = :USER_NAME, ""USER_BIRTH"" = :USER_BIRTH, ""USER_TELE"" = :USER_TELE, ""USER_ADDR"" = :USER_ADDR, ""USER_EMAIL"" = :USER_EMAIL, ""USER_NOT"" = :USER_NOT, ""REFUND_COUNT"" = :REFUND_COUNT, ""USER_GRADE"" = :USER_GRADE, ""ORDERCOUNT"" = :ORDERCOUNT, ""PAYMONEY"" = :PAYMONEY WHERE ((""USER_ID"" = :Original_USER_ID) AND (""USER_PASSWORD"" = :Original_USER_PASSWORD) AND (""USER_NAME"" = :Original_USER_NAME) AND (""USER_BIRTH"" = :Original_USER_BIRTH) AND (""USER_TELE"" = :Original_USER_TELE) AND (""USER_ADDR"" = :Original_USER_ADDR) AND (""USER_EMAIL"" = :Original_USER_EMAIL) AND (""USER_NOT"" = :Original_USER_NOT) AND ((:IsNull_REFUND_COUNT = 1 AND ""REFUND_COUNT"" IS NULL) OR (""REFUND_COUNT"" = :Original_REFUND_COUNT)) AND ((:IsNull_USER_GRADE = 1 AND ""USER_GRADE"" IS NULL) OR (""USER_GRADE"" = :Original_USER_GRADE)) AND ((:IsNull_ORDERCOUNT = 1 AND ""ORDERCOUNT"" IS NULL) OR (""ORDERCOUNT"" = :Original_ORDERCOUNT)) AND ((:IsNull_PAYMONEY = 1 AND ""PAYMONEY"" IS NULL) OR (""PAYMONEY"" = :Original_PAYMONEY)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "USER_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "USER_PASSWORD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_PASSWORD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "USER_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_NAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "USER_BIRTH";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_BIRTH";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "USER_TELE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_TELE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "USER_ADDR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ADDR";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "USER_EMAIL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_EMAIL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "USER_NOT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_NOT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REFUND_COUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "REFUND_COUNT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "USER_GRADE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_GRADE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ORDERCOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDERCOUNT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PAYMONEY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PAYMONEY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_USER_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_USER_PASSWORD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_PASSWORD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_USER_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_USER_BIRTH";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_BIRTH";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_USER_TELE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_TELE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_USER_ADDR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ADDR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_USER_EMAIL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_EMAIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_USER_NOT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_NOT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REFUND_COUNT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "REFUND_COUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REFUND_COUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "REFUND_COUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_USER_GRADE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_GRADE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_USER_GRADE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_GRADE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ORDERCOUNT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDERCOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ORDERCOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDERCOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_PAYMONEY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PAYMONEY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PAYMONEY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PAYMONEY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::DBP_FINAL_5532437.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[9];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT USER_ID, USER_PASSWORD, USER_NAME, USER_BIRTH, USER_TELE, USER_ADDR, USER_" +
                "EMAIL, USER_NOT, REFUND_COUNT, USER_GRADE, ORDERCOUNT, PAYMONEY FROM S5532437.US" +
                "ERS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT ORDERCOUNT, PAYMONEY FROM S5532437.USERS WHERE (USER_ID = :PARAM)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ID";
            this._commandCollection[1].Parameters.Add(param);
            this._commandCollection[2] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT PAYMONEY\r\nFROM USERS\r\nWHERE UESR_ID = :PARAM";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM";
            param.DbType = global::System.Data.DbType.Object;
            param.Size = 1024;
            param.IsNullable = true;
            this._commandCollection[2].Parameters.Add(param);
            this._commandCollection[3] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT USER_NAME, REFUND_COUNT, USER_GRADE, ORDERCOUNT, PAYMONEY FROM S5532437.US" +
                "ERS WHERE (USER_ID = :PARAM)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ID";
            this._commandCollection[3].Parameters.Add(param);
            this._commandCollection[4] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "UPDATE  USERS\r\nSET        USER_GRADE = \'우수고객\'\r\nWHERE  USER_ID = :PARAM";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[4].Parameters.Add(param);
            this._commandCollection[5] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "UPDATE  USERS\r\nSET        ORDERCOUNT= :PARAM\r\nWHERE  USER_ID = :PARAM2\r\n";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDERCOUNT";
            this._commandCollection[5].Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[5].Parameters.Add(param);
            this._commandCollection[6] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "UPDATE  USERS\r\nSET        PAYMONEY = :PARAM\r\nWHERE  USER_ID = :PARAM2\r\n";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 999;
            param.IsNullable = true;
            param.SourceColumn = "PAYMONEY";
            this._commandCollection[6].Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[6].Parameters.Add(param);
            this._commandCollection[7] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "UPDATE  USERS\r\nSET        USER_GRADE= \'불량고객\'\r\nWHERE  USER_ID=:PARAM";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[7].Parameters.Add(param);
            this._commandCollection[8] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[8].Connection = this.Connection;
            this._commandCollection[8].CommandText = "UPDATE USERS\r\nSET        PAYMONEY = :PARAM1\r\nWHERE  USERID = :PARAM2\r\n";
            this._commandCollection[8].CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM1";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 999;
            param.IsNullable = true;
            param.SourceColumn = "PAYMONEY";
            this._commandCollection[8].Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM2";
            param.DbType = global::System.Data.DbType.Object;
            param.Size = 1024;
            param.IsNullable = true;
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[8].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.USERSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.USERSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.USERSDataTable dataTable = new DataSet1.USERSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.USERSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "USERS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_USER_ID, string Original_USER_PASSWORD, string Original_USER_NAME, string Original_USER_BIRTH, string Original_USER_TELE, string Original_USER_ADDR, string Original_USER_EMAIL, string Original_USER_NOT, global::System.Nullable<decimal> Original_REFUND_COUNT, string Original_USER_GRADE, global::System.Nullable<decimal> Original_ORDERCOUNT, global::System.Nullable<decimal> Original_PAYMONEY) {
            if ((Original_USER_ID == null)) {
                throw new global::System.ArgumentNullException("Original_USER_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_USER_ID));
            }
            if ((Original_USER_PASSWORD == null)) {
                throw new global::System.ArgumentNullException("Original_USER_PASSWORD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_USER_PASSWORD));
            }
            if ((Original_USER_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_USER_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_USER_NAME));
            }
            if ((Original_USER_BIRTH == null)) {
                throw new global::System.ArgumentNullException("Original_USER_BIRTH");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_USER_BIRTH));
            }
            if ((Original_USER_TELE == null)) {
                throw new global::System.ArgumentNullException("Original_USER_TELE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_USER_TELE));
            }
            if ((Original_USER_ADDR == null)) {
                throw new global::System.ArgumentNullException("Original_USER_ADDR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_USER_ADDR));
            }
            if ((Original_USER_EMAIL == null)) {
                throw new global::System.ArgumentNullException("Original_USER_EMAIL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_USER_EMAIL));
            }
            if ((Original_USER_NOT == null)) {
                throw new global::System.ArgumentNullException("Original_USER_NOT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_USER_NOT));
            }
            if ((Original_REFUND_COUNT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_REFUND_COUNT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_USER_GRADE == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_USER_GRADE));
            }
            if ((Original_ORDERCOUNT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((decimal)(Original_ORDERCOUNT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_PAYMONEY.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((decimal)(Original_PAYMONEY.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string USER_ID, string USER_PASSWORD, string USER_NAME, string USER_BIRTH, string USER_TELE, string USER_ADDR, string USER_EMAIL, string USER_NOT, global::System.Nullable<decimal> REFUND_COUNT, string USER_GRADE, global::System.Nullable<decimal> ORDERCOUNT, global::System.Nullable<decimal> PAYMONEY) {
            if ((USER_ID == null)) {
                throw new global::System.ArgumentNullException("USER_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(USER_ID));
            }
            if ((USER_PASSWORD == null)) {
                throw new global::System.ArgumentNullException("USER_PASSWORD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(USER_PASSWORD));
            }
            if ((USER_NAME == null)) {
                throw new global::System.ArgumentNullException("USER_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(USER_NAME));
            }
            if ((USER_BIRTH == null)) {
                throw new global::System.ArgumentNullException("USER_BIRTH");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(USER_BIRTH));
            }
            if ((USER_TELE == null)) {
                throw new global::System.ArgumentNullException("USER_TELE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(USER_TELE));
            }
            if ((USER_ADDR == null)) {
                throw new global::System.ArgumentNullException("USER_ADDR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(USER_ADDR));
            }
            if ((USER_EMAIL == null)) {
                throw new global::System.ArgumentNullException("USER_EMAIL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(USER_EMAIL));
            }
            if ((USER_NOT == null)) {
                throw new global::System.ArgumentNullException("USER_NOT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(USER_NOT));
            }
            if ((REFUND_COUNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(REFUND_COUNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((USER_GRADE == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(USER_GRADE));
            }
            if ((ORDERCOUNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(ORDERCOUNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((PAYMONEY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(PAYMONEY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string USER_ID, 
                    string USER_PASSWORD, 
                    string USER_NAME, 
                    string USER_BIRTH, 
                    string USER_TELE, 
                    string USER_ADDR, 
                    string USER_EMAIL, 
                    string USER_NOT, 
                    global::System.Nullable<decimal> REFUND_COUNT, 
                    string USER_GRADE, 
                    global::System.Nullable<decimal> ORDERCOUNT, 
                    global::System.Nullable<decimal> PAYMONEY, 
                    string Original_USER_ID, 
                    string Original_USER_PASSWORD, 
                    string Original_USER_NAME, 
                    string Original_USER_BIRTH, 
                    string Original_USER_TELE, 
                    string Original_USER_ADDR, 
                    string Original_USER_EMAIL, 
                    string Original_USER_NOT, 
                    global::System.Nullable<decimal> Original_REFUND_COUNT, 
                    string Original_USER_GRADE, 
                    global::System.Nullable<decimal> Original_ORDERCOUNT, 
                    global::System.Nullable<decimal> Original_PAYMONEY) {
            if ((USER_ID == null)) {
                throw new global::System.ArgumentNullException("USER_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(USER_ID));
            }
            if ((USER_PASSWORD == null)) {
                throw new global::System.ArgumentNullException("USER_PASSWORD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(USER_PASSWORD));
            }
            if ((USER_NAME == null)) {
                throw new global::System.ArgumentNullException("USER_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(USER_NAME));
            }
            if ((USER_BIRTH == null)) {
                throw new global::System.ArgumentNullException("USER_BIRTH");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(USER_BIRTH));
            }
            if ((USER_TELE == null)) {
                throw new global::System.ArgumentNullException("USER_TELE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(USER_TELE));
            }
            if ((USER_ADDR == null)) {
                throw new global::System.ArgumentNullException("USER_ADDR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(USER_ADDR));
            }
            if ((USER_EMAIL == null)) {
                throw new global::System.ArgumentNullException("USER_EMAIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(USER_EMAIL));
            }
            if ((USER_NOT == null)) {
                throw new global::System.ArgumentNullException("USER_NOT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(USER_NOT));
            }
            if ((REFUND_COUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(REFUND_COUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((USER_GRADE == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(USER_GRADE));
            }
            if ((ORDERCOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(ORDERCOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((PAYMONEY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(PAYMONEY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_USER_ID == null)) {
                throw new global::System.ArgumentNullException("Original_USER_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_USER_ID));
            }
            if ((Original_USER_PASSWORD == null)) {
                throw new global::System.ArgumentNullException("Original_USER_PASSWORD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_USER_PASSWORD));
            }
            if ((Original_USER_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_USER_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_USER_NAME));
            }
            if ((Original_USER_BIRTH == null)) {
                throw new global::System.ArgumentNullException("Original_USER_BIRTH");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_USER_BIRTH));
            }
            if ((Original_USER_TELE == null)) {
                throw new global::System.ArgumentNullException("Original_USER_TELE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_USER_TELE));
            }
            if ((Original_USER_ADDR == null)) {
                throw new global::System.ArgumentNullException("Original_USER_ADDR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_USER_ADDR));
            }
            if ((Original_USER_EMAIL == null)) {
                throw new global::System.ArgumentNullException("Original_USER_EMAIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_USER_EMAIL));
            }
            if ((Original_USER_NOT == null)) {
                throw new global::System.ArgumentNullException("Original_USER_NOT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_USER_NOT));
            }
            if ((Original_REFUND_COUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_REFUND_COUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_USER_GRADE == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_USER_GRADE));
            }
            if ((Original_ORDERCOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(Original_ORDERCOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_PAYMONEY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(Original_PAYMONEY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string USER_PASSWORD, 
                    string USER_NAME, 
                    string USER_BIRTH, 
                    string USER_TELE, 
                    string USER_ADDR, 
                    string USER_EMAIL, 
                    string USER_NOT, 
                    global::System.Nullable<decimal> REFUND_COUNT, 
                    string USER_GRADE, 
                    global::System.Nullable<decimal> ORDERCOUNT, 
                    global::System.Nullable<decimal> PAYMONEY, 
                    string Original_USER_ID, 
                    string Original_USER_PASSWORD, 
                    string Original_USER_NAME, 
                    string Original_USER_BIRTH, 
                    string Original_USER_TELE, 
                    string Original_USER_ADDR, 
                    string Original_USER_EMAIL, 
                    string Original_USER_NOT, 
                    global::System.Nullable<decimal> Original_REFUND_COUNT, 
                    string Original_USER_GRADE, 
                    global::System.Nullable<decimal> Original_ORDERCOUNT, 
                    global::System.Nullable<decimal> Original_PAYMONEY) {
            return this.Update(Original_USER_ID, USER_PASSWORD, USER_NAME, USER_BIRTH, USER_TELE, USER_ADDR, USER_EMAIL, USER_NOT, REFUND_COUNT, USER_GRADE, ORDERCOUNT, PAYMONEY, Original_USER_ID, Original_USER_PASSWORD, Original_USER_NAME, Original_USER_BIRTH, Original_USER_TELE, Original_USER_ADDR, Original_USER_EMAIL, Original_USER_NOT, Original_REFUND_COUNT, Original_USER_GRADE, Original_ORDERCOUNT, Original_PAYMONEY);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<decimal> GET_ORDERCOUNT(string PARAM) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = this.CommandCollection[1];
            if ((PARAM == null)) {
                throw new global::System.ArgumentNullException("PARAM");
            }
            else {
                command.Parameters[0].Value = ((string)(PARAM));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<decimal>();
            }
            else {
                return new global::System.Nullable<decimal>(((decimal)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object GET_PAYMONEY(object PARAM) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = this.CommandCollection[2];
            if ((PARAM == null)) {
                throw new global::System.ArgumentNullException("PARAM");
            }
            else {
                command.Parameters[0].Value = ((object)(PARAM));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual string GET_USER_NAME(string PARAM) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = this.CommandCollection[3];
            if ((PARAM == null)) {
                throw new global::System.ArgumentNullException("PARAM");
            }
            else {
                command.Parameters[0].Value = ((string)(PARAM));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((string)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int GOOD_USER(string PARAM) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = this.CommandCollection[4];
            if ((PARAM == null)) {
                throw new global::System.ArgumentNullException("PARAM");
            }
            else {
                command.Parameters[0].Value = ((string)(PARAM));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UPDATE_ORDERCOUNT(global::System.Nullable<decimal> PARAM, string PARAM2) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = this.CommandCollection[5];
            if ((PARAM.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(PARAM.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PARAM2 == null)) {
                throw new global::System.ArgumentNullException("PARAM2");
            }
            else {
                command.Parameters[1].Value = ((string)(PARAM2));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UPDATE_PAYMONEY(string PARAM, string PARAM2) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = this.CommandCollection[6];
            if ((PARAM == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(PARAM));
            }
            if ((PARAM2 == null)) {
                throw new global::System.ArgumentNullException("PARAM2");
            }
            else {
                command.Parameters[1].Value = ((string)(PARAM2));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int USER_BAD(string PARAM) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = this.CommandCollection[7];
            if ((PARAM == null)) {
                throw new global::System.ArgumentNullException("PARAM");
            }
            else {
                command.Parameters[0].Value = ((string)(PARAM));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int USER_PAYMONEY(string PARAM1, object PARAM2) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = this.CommandCollection[8];
            if ((PARAM1 == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(PARAM1));
            }
            if ((PARAM2 == null)) {
                throw new global::System.ArgumentNullException("PARAM2");
            }
            else {
                command.Parameters[1].Value = ((object)(PARAM2));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BASKETTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public BASKETTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BASKET";
            tableMapping.ColumnMappings.Add("USER_ID", "USER_ID");
            tableMapping.ColumnMappings.Add("PROD_ID", "PROD_ID");
            tableMapping.ColumnMappings.Add("STOR_NAME", "STOR_NAME");
            tableMapping.ColumnMappings.Add("PROD_PRICE", "PROD_PRICE");
            tableMapping.ColumnMappings.Add("PROD_KIND", "PROD_KIND");
            tableMapping.ColumnMappings.Add("PROD_NAME", "PROD_NAME");
            tableMapping.ColumnMappings.Add("PROD_COUNT", "PROD_COUNT");
            tableMapping.ColumnMappings.Add("TOTAL_PRICE", "TOTAL_PRICE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""S5532437"".""BASKET"" WHERE ((""USER_ID"" = :Original_USER_ID) AND (""PROD_ID"" = :Original_PROD_ID) AND (""STOR_NAME"" = :Original_STOR_NAME) AND (""PROD_PRICE"" = :Original_PROD_PRICE) AND (""PROD_KIND"" = :Original_PROD_KIND) AND (""PROD_NAME"" = :Original_PROD_NAME) AND (""PROD_COUNT"" = :Original_PROD_COUNT) AND ((:IsNull_TOTAL_PRICE = 1 AND ""TOTAL_PRICE"" IS NULL) OR (""TOTAL_PRICE"" = :Original_TOTAL_PRICE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_USER_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_STOR_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "STOR_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_PRICE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PROD_PRICE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_KIND";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_KIND";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_COUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PROD_COUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TOTAL_PRICE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTAL_PRICE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TOTAL_PRICE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTAL_PRICE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"S5532437\".\"BASKET\" (\"USER_ID\", \"PROD_ID\", \"STOR_NAME\", \"PROD_PRICE\"," +
                " \"PROD_KIND\", \"PROD_NAME\", \"PROD_COUNT\", \"TOTAL_PRICE\") VALUES (:USER_ID, :PROD_" +
                "ID, :STOR_NAME, :PROD_PRICE, :PROD_KIND, :PROD_NAME, :PROD_COUNT, :TOTAL_PRICE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "USER_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "STOR_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "STOR_NAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_PRICE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PROD_PRICE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_KIND";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_KIND";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_NAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_COUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PROD_COUNT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TOTAL_PRICE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTAL_PRICE";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""S5532437"".""BASKET"" SET ""USER_ID"" = :USER_ID, ""PROD_ID"" = :PROD_ID, ""STOR_NAME"" = :STOR_NAME, ""PROD_PRICE"" = :PROD_PRICE, ""PROD_KIND"" = :PROD_KIND, ""PROD_NAME"" = :PROD_NAME, ""PROD_COUNT"" = :PROD_COUNT, ""TOTAL_PRICE"" = :TOTAL_PRICE WHERE ((""USER_ID"" = :Original_USER_ID) AND (""PROD_ID"" = :Original_PROD_ID) AND (""STOR_NAME"" = :Original_STOR_NAME) AND (""PROD_PRICE"" = :Original_PROD_PRICE) AND (""PROD_KIND"" = :Original_PROD_KIND) AND (""PROD_NAME"" = :Original_PROD_NAME) AND (""PROD_COUNT"" = :Original_PROD_COUNT) AND ((:IsNull_TOTAL_PRICE = 1 AND ""TOTAL_PRICE"" IS NULL) OR (""TOTAL_PRICE"" = :Original_TOTAL_PRICE)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "USER_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "STOR_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "STOR_NAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_PRICE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PROD_PRICE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_KIND";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_KIND";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_NAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_COUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PROD_COUNT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TOTAL_PRICE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTAL_PRICE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_USER_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_STOR_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "STOR_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_PRICE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PROD_PRICE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_KIND";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_KIND";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_COUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PROD_COUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TOTAL_PRICE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTAL_PRICE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TOTAL_PRICE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTAL_PRICE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::DBP_FINAL_5532437.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[2];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT USER_ID, PROD_ID, STOR_NAME, PROD_PRICE, PROD_KIND, PROD_NAME, PROD_COUNT," +
                " TOTAL_PRICE FROM S5532437.BASKET";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT 1\r\nFROM S5532437.BASKET\r\nWHERE EXISTS (SELECT 1 FROM BASKET WHERE BASKET.P" +
                "ROD_ID = :PARAM)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM";
            param.DbType = global::System.Data.DbType.Object;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1024;
            param.IsNullable = true;
            param.SourceColumn = "PROD_ID";
            this._commandCollection[1].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.BASKETDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.BASKETDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.BASKETDataTable dataTable = new DataSet1.BASKETDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.BASKETDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "BASKET");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_USER_ID, string Original_PROD_ID, string Original_STOR_NAME, decimal Original_PROD_PRICE, string Original_PROD_KIND, string Original_PROD_NAME, decimal Original_PROD_COUNT, global::System.Nullable<decimal> Original_TOTAL_PRICE) {
            if ((Original_USER_ID == null)) {
                throw new global::System.ArgumentNullException("Original_USER_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_USER_ID));
            }
            if ((Original_PROD_ID == null)) {
                throw new global::System.ArgumentNullException("Original_PROD_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_PROD_ID));
            }
            if ((Original_STOR_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_STOR_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_STOR_NAME));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_PROD_PRICE));
            if ((Original_PROD_KIND == null)) {
                throw new global::System.ArgumentNullException("Original_PROD_KIND");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_PROD_KIND));
            }
            if ((Original_PROD_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_PROD_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_PROD_NAME));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_PROD_COUNT));
            if ((Original_TOTAL_PRICE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_TOTAL_PRICE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string USER_ID, string PROD_ID, string STOR_NAME, decimal PROD_PRICE, string PROD_KIND, string PROD_NAME, decimal PROD_COUNT, global::System.Nullable<decimal> TOTAL_PRICE) {
            if ((USER_ID == null)) {
                throw new global::System.ArgumentNullException("USER_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(USER_ID));
            }
            if ((PROD_ID == null)) {
                throw new global::System.ArgumentNullException("PROD_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PROD_ID));
            }
            if ((STOR_NAME == null)) {
                throw new global::System.ArgumentNullException("STOR_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(STOR_NAME));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(PROD_PRICE));
            if ((PROD_KIND == null)) {
                throw new global::System.ArgumentNullException("PROD_KIND");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(PROD_KIND));
            }
            if ((PROD_NAME == null)) {
                throw new global::System.ArgumentNullException("PROD_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(PROD_NAME));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(PROD_COUNT));
            if ((TOTAL_PRICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(TOTAL_PRICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string USER_ID, 
                    string PROD_ID, 
                    string STOR_NAME, 
                    decimal PROD_PRICE, 
                    string PROD_KIND, 
                    string PROD_NAME, 
                    decimal PROD_COUNT, 
                    global::System.Nullable<decimal> TOTAL_PRICE, 
                    string Original_USER_ID, 
                    string Original_PROD_ID, 
                    string Original_STOR_NAME, 
                    decimal Original_PROD_PRICE, 
                    string Original_PROD_KIND, 
                    string Original_PROD_NAME, 
                    decimal Original_PROD_COUNT, 
                    global::System.Nullable<decimal> Original_TOTAL_PRICE) {
            if ((USER_ID == null)) {
                throw new global::System.ArgumentNullException("USER_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(USER_ID));
            }
            if ((PROD_ID == null)) {
                throw new global::System.ArgumentNullException("PROD_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PROD_ID));
            }
            if ((STOR_NAME == null)) {
                throw new global::System.ArgumentNullException("STOR_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(STOR_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(PROD_PRICE));
            if ((PROD_KIND == null)) {
                throw new global::System.ArgumentNullException("PROD_KIND");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(PROD_KIND));
            }
            if ((PROD_NAME == null)) {
                throw new global::System.ArgumentNullException("PROD_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(PROD_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(PROD_COUNT));
            if ((TOTAL_PRICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(TOTAL_PRICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_USER_ID == null)) {
                throw new global::System.ArgumentNullException("Original_USER_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_USER_ID));
            }
            if ((Original_PROD_ID == null)) {
                throw new global::System.ArgumentNullException("Original_PROD_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_PROD_ID));
            }
            if ((Original_STOR_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_STOR_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_STOR_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Original_PROD_PRICE));
            if ((Original_PROD_KIND == null)) {
                throw new global::System.ArgumentNullException("Original_PROD_KIND");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_PROD_KIND));
            }
            if ((Original_PROD_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_PROD_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_PROD_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_PROD_COUNT));
            if ((Original_TOTAL_PRICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Original_TOTAL_PRICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string STOR_NAME, decimal PROD_PRICE, string PROD_KIND, string PROD_NAME, decimal PROD_COUNT, global::System.Nullable<decimal> TOTAL_PRICE, string Original_USER_ID, string Original_PROD_ID, string Original_STOR_NAME, decimal Original_PROD_PRICE, string Original_PROD_KIND, string Original_PROD_NAME, decimal Original_PROD_COUNT, global::System.Nullable<decimal> Original_TOTAL_PRICE) {
            return this.Update(Original_USER_ID, Original_PROD_ID, STOR_NAME, PROD_PRICE, PROD_KIND, PROD_NAME, PROD_COUNT, TOTAL_PRICE, Original_USER_ID, Original_PROD_ID, Original_STOR_NAME, Original_PROD_PRICE, Original_PROD_KIND, Original_PROD_NAME, Original_PROD_COUNT, Original_TOTAL_PRICE);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object PROD_ID_EQUAL(object PARAM) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = this.CommandCollection[1];
            if ((PARAM == null)) {
                throw new global::System.ArgumentNullException("PARAM");
            }
            else {
                command.Parameters[0].Value = ((object)(PARAM));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ORDERD_PRODTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ORDERD_PRODTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ORDERD_PROD";
            tableMapping.ColumnMappings.Add("ORDER_ID", "ORDER_ID");
            tableMapping.ColumnMappings.Add("PROD_ID", "PROD_ID");
            tableMapping.ColumnMappings.Add("STOR_NAME", "STOR_NAME");
            tableMapping.ColumnMappings.Add("USER_ID", "USER_ID");
            tableMapping.ColumnMappings.Add("PROD_PRICE", "PROD_PRICE");
            tableMapping.ColumnMappings.Add("PROD_KIND", "PROD_KIND");
            tableMapping.ColumnMappings.Add("PROD_NAME", "PROD_NAME");
            tableMapping.ColumnMappings.Add("ORDER_OK", "ORDER_OK");
            tableMapping.ColumnMappings.Add("PROD_COUNT", "PROD_COUNT");
            tableMapping.ColumnMappings.Add("SELLER_ID", "SELLER_ID");
            tableMapping.ColumnMappings.Add("TOTAL_PRICE", "TOTAL_PRICE");
            tableMapping.ColumnMappings.Add("ORDER_DATE", "ORDER_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""S5532437"".""ORDERD_PROD"" WHERE ((""ORDER_ID"" = :Original_ORDER_ID) AND (""PROD_ID"" = :Original_PROD_ID) AND (""STOR_NAME"" = :Original_STOR_NAME) AND (""USER_ID"" = :Original_USER_ID) AND (""PROD_PRICE"" = :Original_PROD_PRICE) AND (""PROD_KIND"" = :Original_PROD_KIND) AND (""PROD_NAME"" = :Original_PROD_NAME) AND (""ORDER_OK"" = :Original_ORDER_OK) AND (""PROD_COUNT"" = :Original_PROD_COUNT) AND ((:IsNull_SELLER_ID = 1 AND ""SELLER_ID"" IS NULL) OR (""SELLER_ID"" = :Original_SELLER_ID)) AND ((:IsNull_TOTAL_PRICE = 1 AND ""TOTAL_PRICE"" IS NULL) OR (""TOTAL_PRICE"" = :Original_TOTAL_PRICE)) AND (""ORDER_DATE"" = :Original_ORDER_DATE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ORDER_ID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_STOR_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "STOR_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_USER_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_PRICE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PROD_PRICE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_KIND";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_KIND";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ORDER_OK";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_OK";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_COUNT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_COUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SELLER_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "SELLER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SELLER_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "SELLER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TOTAL_PRICE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTAL_PRICE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TOTAL_PRICE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTAL_PRICE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ORDER_DATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_DATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""S5532437"".""ORDERD_PROD"" (""ORDER_ID"", ""PROD_ID"", ""STOR_NAME"", ""USER_ID"", ""PROD_PRICE"", ""PROD_KIND"", ""PROD_NAME"", ""ORDER_OK"", ""PROD_COUNT"", ""SELLER_ID"", ""TOTAL_PRICE"", ""ORDER_DATE"") VALUES (:ORDER_ID, :PROD_ID, :STOR_NAME, :USER_ID, :PROD_PRICE, :PROD_KIND, :PROD_NAME, :ORDER_OK, :PROD_COUNT, :SELLER_ID, :TOTAL_PRICE, :ORDER_DATE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ORDER_ID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "STOR_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "STOR_NAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "USER_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_PRICE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PROD_PRICE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_KIND";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_KIND";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_NAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ORDER_OK";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_OK";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_COUNT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_COUNT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SELLER_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "SELLER_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TOTAL_PRICE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTAL_PRICE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ORDER_DATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_DATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""S5532437"".""ORDERD_PROD"" SET ""ORDER_ID"" = :ORDER_ID, ""PROD_ID"" = :PROD_ID, ""STOR_NAME"" = :STOR_NAME, ""USER_ID"" = :USER_ID, ""PROD_PRICE"" = :PROD_PRICE, ""PROD_KIND"" = :PROD_KIND, ""PROD_NAME"" = :PROD_NAME, ""ORDER_OK"" = :ORDER_OK, ""PROD_COUNT"" = :PROD_COUNT, ""SELLER_ID"" = :SELLER_ID, ""TOTAL_PRICE"" = :TOTAL_PRICE, ""ORDER_DATE"" = :ORDER_DATE WHERE ((""ORDER_ID"" = :Original_ORDER_ID) AND (""PROD_ID"" = :Original_PROD_ID) AND (""STOR_NAME"" = :Original_STOR_NAME) AND (""USER_ID"" = :Original_USER_ID) AND (""PROD_PRICE"" = :Original_PROD_PRICE) AND (""PROD_KIND"" = :Original_PROD_KIND) AND (""PROD_NAME"" = :Original_PROD_NAME) AND (""ORDER_OK"" = :Original_ORDER_OK) AND (""PROD_COUNT"" = :Original_PROD_COUNT) AND ((:IsNull_SELLER_ID = 1 AND ""SELLER_ID"" IS NULL) OR (""SELLER_ID"" = :Original_SELLER_ID)) AND ((:IsNull_TOTAL_PRICE = 1 AND ""TOTAL_PRICE"" IS NULL) OR (""TOTAL_PRICE"" = :Original_TOTAL_PRICE)) AND (""ORDER_DATE"" = :Original_ORDER_DATE))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ORDER_ID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "STOR_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "STOR_NAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "USER_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_PRICE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PROD_PRICE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_KIND";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_KIND";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_NAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ORDER_OK";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_OK";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROD_COUNT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_COUNT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SELLER_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "SELLER_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TOTAL_PRICE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTAL_PRICE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ORDER_DATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_DATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ORDER_ID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_STOR_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "STOR_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_USER_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_PRICE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PROD_PRICE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_KIND";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_KIND";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ORDER_OK";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_OK";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROD_COUNT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_COUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SELLER_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "SELLER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SELLER_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "SELLER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TOTAL_PRICE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTAL_PRICE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TOTAL_PRICE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTAL_PRICE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ORDER_DATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_DATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::DBP_FINAL_5532437.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[15];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ORDER_ID, PROD_ID, STOR_NAME, USER_ID, PROD_PRICE, PROD_KIND, PROD_NAME, O" +
                "RDER_OK, PROD_COUNT, SELLER_ID, TOTAL_PRICE, ORDER_DATE FROM S5532437.ORDERD_PRO" +
                "D";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "UPDATE S5532437.ORDERD_PROD\r\nSET        ORDER_OK = \'환불요청\'\r\nWHERE  (ORDER_ID = :PA" +
                "RAM) AND (PROD_ID = :PARAM2) AND (USER_ID = :PARAM3)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[1].Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[1].Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM3";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[1].Parameters.Add(param);
            this._commandCollection[2] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "UPDATE S5532437.ORDERD_PROD\r\nSET        ORDER_OK = \'리뷰작성완료\'\r\nWHERE  (ORDER_ID = :" +
                "PARAM) AND (PROD_ID = :PARAM2) AND (USER_ID = :PARAM3)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[2].Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[2].Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM3";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[2].Parameters.Add(param);
            this._commandCollection[3] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "DELETE FROM ORDERD_PROD\r\nWHERE ORDER_ID =:PARAM";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[3].Parameters.Add(param);
            this._commandCollection[4] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "SELECT PROD_NAME, TOTAL_PRICE, ORDER_DATE FROM S5532437.ORDERD_PROD WHERE (PROD_N" +
                "AME = :PARAM)";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_NAME";
            this._commandCollection[4].Parameters.Add(param);
            this._commandCollection[5] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "SELECT TOTAL_PRICE\r\nFROM S5532437.ORDERD_PROD\r\nWHERE :PARAM <= ORDER_DATE AND ORD" +
                "ER_DATE<= :PARAM2 ";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_DATE";
            this._commandCollection[5].Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM2";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_DATE";
            this._commandCollection[5].Parameters.Add(param);
            this._commandCollection[6] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "SELECT ORDER_ID, PROD_ID, STOR_NAME, USER_ID, PROD_PRICE, PROD_KIND, PROD_NAME, O" +
                "RDER_OK, PROD_COUNT, SELLER_ID, TOTAL_PRICE, ORDER_DATE\r\nFROM S5532437.ORDERD_PR" +
                "OD\r\nWHERE ORDER_ID = :PARAM";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_ID";
            this._commandCollection[6].Parameters.Add(param);
            this._commandCollection[7] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "SELECT order_seq.nextval FROM dual";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[8] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[8].Connection = this.Connection;
            this._commandCollection[8].CommandText = "SELECT PROD_NAME, TOTAL_PRICE, ORDER_DATE FROM S5532437.ORDERD_PROD WHERE (PROD_I" +
                "D = :PARAM)";
            this._commandCollection[8].CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_ID";
            this._commandCollection[8].Parameters.Add(param);
            this._commandCollection[9] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[9].Connection = this.Connection;
            this._commandCollection[9].CommandText = "UPDATE  ORDERD_PROD\r\nSET        ORDER_OK = \'환불확정\', SELLER_ID = :PARAM1\r\nWHERE  OR" +
                "DER_ID = :PARAM2\r\n";
            this._commandCollection[9].CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM1";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "SELLER_ID";
            this._commandCollection[9].Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM2";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[9].Parameters.Add(param);
            this._commandCollection[10] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[10].Connection = this.Connection;
            this._commandCollection[10].CommandText = "UPDATE S5532437.ORDERD_PROD\r\nSET        ORDER_OK = \'구매확정\'\r\nWHERE  (ORDER_ID = :PA" +
                "RAM2) AND (PROD_ID = :PARAM3) AND (USER_ID = :PARAM4)";
            this._commandCollection[10].CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM2";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[10].Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM3";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[10].Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM4";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[10].Parameters.Add(param);
            this._commandCollection[11] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[11].Connection = this.Connection;
            this._commandCollection[11].CommandText = "UPDATE S5532437.ORDERD_PROD\r\nSET        ORDER_OK = \'환불확정\'\r\nWHERE  (ORDER_ID = :PA" +
                "RAM2) AND (PROD_ID = :PARAM3) AND (USER_ID = :PARAM4)";
            this._commandCollection[11].CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM2";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[11].Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM3";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[11].Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM4";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[11].Parameters.Add(param);
            this._commandCollection[12] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[12].Connection = this.Connection;
            this._commandCollection[12].CommandText = "UPDATE  ORDERD_PROD\r\nSET        ORDER_OK = \'환불요청\'\r\nWHERE  (ORDER_ID = :PARAM AND " +
                "PROD_ID = :PARAM2)";
            this._commandCollection[12].CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[12].Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[12].Parameters.Add(param);
            this._commandCollection[13] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[13].Connection = this.Connection;
            this._commandCollection[13].CommandText = "UPDATE  ORDERD_PROD\r\nSET        ORDER_OK = \'환불요청\'\r\nWHERE  ORDER_ID = :PARAM";
            this._commandCollection[13].CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[13].Parameters.Add(param);
            this._commandCollection[14] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[14].Connection = this.Connection;
            this._commandCollection[14].CommandText = "UPDATE S5532437.ORDERD_PROD\r\nSET        SELLER_ID = :PARAM\r\nWHERE  (ORDER_ID = :P" +
                "ARAM2) AND (PROD_ID = :PARAM3) AND (USER_ID = :PARAM4)";
            this._commandCollection[14].CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "SELLER_ID";
            this._commandCollection[14].Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM2";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[14].Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM3";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PROD_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[14].Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = ":PARAM4";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "USER_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[14].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.ORDERD_PRODDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.ORDERD_PRODDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.ORDERD_PRODDataTable dataTable = new DataSet1.ORDERD_PRODDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(DataSet1.ORDERD_PRODDataTable dataTable, string PARAM) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((PARAM == null)) {
                throw new global::System.ArgumentNullException("PARAM");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(PARAM));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet1.ORDERD_PRODDataTable GetDataBy7(string PARAM) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((PARAM == null)) {
                throw new global::System.ArgumentNullException("PARAM");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(PARAM));
            }
            DataSet1.ORDERD_PRODDataTable dataTable = new DataSet1.ORDERD_PRODDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy1(DataSet1.ORDERD_PRODDataTable dataTable, System.DateTime PARAM, System.DateTime PARAM2) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(PARAM));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(PARAM2));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet1.ORDERD_PRODDataTable GetDataBy9(System.DateTime PARAM, System.DateTime PARAM2) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(PARAM));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(PARAM2));
            DataSet1.ORDERD_PRODDataTable dataTable = new DataSet1.ORDERD_PRODDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByORDER_ID(DataSet1.ORDERD_PRODDataTable dataTable, decimal PARAM) {
            this.Adapter.SelectCommand = this.CommandCollection[6];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(PARAM));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet1.ORDERD_PRODDataTable GetDataBy_ORDER_ID(decimal PARAM) {
            this.Adapter.SelectCommand = this.CommandCollection[6];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(PARAM));
            DataSet1.ORDERD_PRODDataTable dataTable = new DataSet1.ORDERD_PRODDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.ORDERD_PRODDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ORDERD_PROD");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ORDER_ID, string Original_PROD_ID, string Original_STOR_NAME, string Original_USER_ID, decimal Original_PROD_PRICE, string Original_PROD_KIND, string Original_PROD_NAME, string Original_ORDER_OK, string Original_PROD_COUNT, string Original_SELLER_ID, global::System.Nullable<decimal> Original_TOTAL_PRICE, System.DateTime Original_ORDER_DATE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ORDER_ID));
            if ((Original_PROD_ID == null)) {
                throw new global::System.ArgumentNullException("Original_PROD_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_PROD_ID));
            }
            if ((Original_STOR_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_STOR_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_STOR_NAME));
            }
            if ((Original_USER_ID == null)) {
                throw new global::System.ArgumentNullException("Original_USER_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_USER_ID));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_PROD_PRICE));
            if ((Original_PROD_KIND == null)) {
                throw new global::System.ArgumentNullException("Original_PROD_KIND");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_PROD_KIND));
            }
            if ((Original_PROD_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_PROD_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_PROD_NAME));
            }
            if ((Original_ORDER_OK == null)) {
                throw new global::System.ArgumentNullException("Original_ORDER_OK");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_ORDER_OK));
            }
            if ((Original_PROD_COUNT == null)) {
                throw new global::System.ArgumentNullException("Original_PROD_COUNT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_PROD_COUNT));
            }
            if ((Original_SELLER_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_SELLER_ID));
            }
            if ((Original_TOTAL_PRICE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_TOTAL_PRICE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[13].Value = ((System.DateTime)(Original_ORDER_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal ORDER_ID, string PROD_ID, string STOR_NAME, string USER_ID, decimal PROD_PRICE, string PROD_KIND, string PROD_NAME, string ORDER_OK, string PROD_COUNT, string SELLER_ID, global::System.Nullable<decimal> TOTAL_PRICE, System.DateTime ORDER_DATE) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ORDER_ID));
            if ((PROD_ID == null)) {
                throw new global::System.ArgumentNullException("PROD_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PROD_ID));
            }
            if ((STOR_NAME == null)) {
                throw new global::System.ArgumentNullException("STOR_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(STOR_NAME));
            }
            if ((USER_ID == null)) {
                throw new global::System.ArgumentNullException("USER_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(USER_ID));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(PROD_PRICE));
            if ((PROD_KIND == null)) {
                throw new global::System.ArgumentNullException("PROD_KIND");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(PROD_KIND));
            }
            if ((PROD_NAME == null)) {
                throw new global::System.ArgumentNullException("PROD_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(PROD_NAME));
            }
            if ((ORDER_OK == null)) {
                throw new global::System.ArgumentNullException("ORDER_OK");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ORDER_OK));
            }
            if ((PROD_COUNT == null)) {
                throw new global::System.ArgumentNullException("PROD_COUNT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(PROD_COUNT));
            }
            if ((SELLER_ID == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(SELLER_ID));
            }
            if ((TOTAL_PRICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(TOTAL_PRICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(ORDER_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal ORDER_ID, 
                    string PROD_ID, 
                    string STOR_NAME, 
                    string USER_ID, 
                    decimal PROD_PRICE, 
                    string PROD_KIND, 
                    string PROD_NAME, 
                    string ORDER_OK, 
                    string PROD_COUNT, 
                    string SELLER_ID, 
                    global::System.Nullable<decimal> TOTAL_PRICE, 
                    System.DateTime ORDER_DATE, 
                    decimal Original_ORDER_ID, 
                    string Original_PROD_ID, 
                    string Original_STOR_NAME, 
                    string Original_USER_ID, 
                    decimal Original_PROD_PRICE, 
                    string Original_PROD_KIND, 
                    string Original_PROD_NAME, 
                    string Original_ORDER_OK, 
                    string Original_PROD_COUNT, 
                    string Original_SELLER_ID, 
                    global::System.Nullable<decimal> Original_TOTAL_PRICE, 
                    System.DateTime Original_ORDER_DATE) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ORDER_ID));
            if ((PROD_ID == null)) {
                throw new global::System.ArgumentNullException("PROD_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PROD_ID));
            }
            if ((STOR_NAME == null)) {
                throw new global::System.ArgumentNullException("STOR_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(STOR_NAME));
            }
            if ((USER_ID == null)) {
                throw new global::System.ArgumentNullException("USER_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(USER_ID));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(PROD_PRICE));
            if ((PROD_KIND == null)) {
                throw new global::System.ArgumentNullException("PROD_KIND");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(PROD_KIND));
            }
            if ((PROD_NAME == null)) {
                throw new global::System.ArgumentNullException("PROD_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(PROD_NAME));
            }
            if ((ORDER_OK == null)) {
                throw new global::System.ArgumentNullException("ORDER_OK");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(ORDER_OK));
            }
            if ((PROD_COUNT == null)) {
                throw new global::System.ArgumentNullException("PROD_COUNT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(PROD_COUNT));
            }
            if ((SELLER_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(SELLER_ID));
            }
            if ((TOTAL_PRICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(TOTAL_PRICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(ORDER_DATE));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_ORDER_ID));
            if ((Original_PROD_ID == null)) {
                throw new global::System.ArgumentNullException("Original_PROD_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_PROD_ID));
            }
            if ((Original_STOR_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_STOR_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_STOR_NAME));
            }
            if ((Original_USER_ID == null)) {
                throw new global::System.ArgumentNullException("Original_USER_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_USER_ID));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Original_PROD_PRICE));
            if ((Original_PROD_KIND == null)) {
                throw new global::System.ArgumentNullException("Original_PROD_KIND");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_PROD_KIND));
            }
            if ((Original_PROD_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_PROD_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_PROD_NAME));
            }
            if ((Original_ORDER_OK == null)) {
                throw new global::System.ArgumentNullException("Original_ORDER_OK");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_ORDER_OK));
            }
            if ((Original_PROD_COUNT == null)) {
                throw new global::System.ArgumentNullException("Original_PROD_COUNT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_PROD_COUNT));
            }
            if ((Original_SELLER_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_SELLER_ID));
            }
            if ((Original_TOTAL_PRICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(Original_TOTAL_PRICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(Original_ORDER_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string STOR_NAME, 
                    decimal PROD_PRICE, 
                    string PROD_KIND, 
                    string PROD_NAME, 
                    string ORDER_OK, 
                    string PROD_COUNT, 
                    string SELLER_ID, 
                    global::System.Nullable<decimal> TOTAL_PRICE, 
                    System.DateTime ORDER_DATE, 
                    decimal Original_ORDER_ID, 
                    string Original_PROD_ID, 
                    string Original_STOR_NAME, 
                    string Original_USER_ID, 
                    decimal Original_PROD_PRICE, 
                    string Original_PROD_KIND, 
                    string Original_PROD_NAME, 
                    string Original_ORDER_OK, 
                    string Original_PROD_COUNT, 
                    string Original_SELLER_ID, 
                    global::System.Nullable<decimal> Original_TOTAL_PRICE, 
                    System.DateTime Original_ORDER_DATE) {
            return this.Update(Original_ORDER_ID, Original_PROD_ID, STOR_NAME, Original_USER_ID, PROD_PRICE, PROD_KIND, PROD_NAME, ORDER_OK, PROD_COUNT, SELLER_ID, TOTAL_PRICE, ORDER_DATE, Original_ORDER_ID, Original_PROD_ID, Original_STOR_NAME, Original_USER_ID, Original_PROD_PRICE, Original_PROD_KIND, Original_PROD_NAME, Original_ORDER_OK, Original_PROD_COUNT, Original_SELLER_ID, Original_TOTAL_PRICE, Original_ORDER_DATE);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int After_Refund(decimal PARAM, string PARAM2, string PARAM3) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((decimal)(PARAM));
            if ((PARAM2 == null)) {
                throw new global::System.ArgumentNullException("PARAM2");
            }
            else {
                command.Parameters[1].Value = ((string)(PARAM2));
            }
            if ((PARAM3 == null)) {
                throw new global::System.ArgumentNullException("PARAM3");
            }
            else {
                command.Parameters[2].Value = ((string)(PARAM3));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int afterreview(decimal PARAM, string PARAM2, string PARAM3) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = this.CommandCollection[2];
            command.Parameters[0].Value = ((decimal)(PARAM));
            if ((PARAM2 == null)) {
                throw new global::System.ArgumentNullException("PARAM2");
            }
            else {
                command.Parameters[1].Value = ((string)(PARAM2));
            }
            if ((PARAM3 == null)) {
                throw new global::System.ArgumentNullException("PARAM3");
            }
            else {
                command.Parameters[2].Value = ((string)(PARAM3));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteOrder(decimal PARAM) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = this.CommandCollection[3];
            command.Parameters[0].Value = ((decimal)(PARAM));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<decimal> fillbyseq() {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = this.CommandCollection[7];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<decimal>();
            }
            else {
                return new global::System.Nullable<decimal>(((decimal)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual string GET_PROD_NAME(string PARAM) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = this.CommandCollection[8];
            if ((PARAM == null)) {
                throw new global::System.ArgumentNullException("PARAM");
            }
            else {
                command.Parameters[0].Value = ((string)(PARAM));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((string)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int ORDER_OK_BY_OREDER_ID(string PARAM1, decimal PARAM2) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = this.CommandCollection[9];
            if ((PARAM1 == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(PARAM1));
            }
            command.Parameters[1].Value = ((decimal)(PARAM2));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int ordercheck(decimal PARAM2, string PARAM3, string PARAM4) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = this.CommandCollection[10];
            command.Parameters[0].Value = ((decimal)(PARAM2));
            if ((PARAM3 == null)) {
                throw new global::System.ArgumentNullException("PARAM3");
            }
            else {
                command.Parameters[1].Value = ((string)(PARAM3));
            }
            if ((PARAM4 == null)) {
                throw new global::System.ArgumentNullException("PARAM4");
            }
            else {
                command.Parameters[2].Value = ((string)(PARAM4));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int REFUND_OK(decimal PARAM2, string PARAM3, string PARAM4) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = this.CommandCollection[11];
            command.Parameters[0].Value = ((decimal)(PARAM2));
            if ((PARAM3 == null)) {
                throw new global::System.ArgumentNullException("PARAM3");
            }
            else {
                command.Parameters[1].Value = ((string)(PARAM3));
            }
            if ((PARAM4 == null)) {
                throw new global::System.ArgumentNullException("PARAM4");
            }
            else {
                command.Parameters[2].Value = ((string)(PARAM4));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int REFUND_REQUEST(decimal PARAM, string PARAM2) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = this.CommandCollection[12];
            command.Parameters[0].Value = ((decimal)(PARAM));
            if ((PARAM2 == null)) {
                throw new global::System.ArgumentNullException("PARAM2");
            }
            else {
                command.Parameters[1].Value = ((string)(PARAM2));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int REFUND_REQUEST_BY_ORDERID(decimal PARAM) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = this.CommandCollection[13];
            command.Parameters[0].Value = ((decimal)(PARAM));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int WHY(string PARAM, decimal PARAM2, string PARAM3, string PARAM4) {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = this.CommandCollection[14];
            if ((PARAM == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(PARAM));
            }
            command.Parameters[1].Value = ((decimal)(PARAM2));
            if ((PARAM3 == null)) {
                throw new global::System.ArgumentNullException("PARAM3");
            }
            else {
                command.Parameters[2].Value = ((string)(PARAM3));
            }
            if ((PARAM4 == null)) {
                throw new global::System.ArgumentNullException("PARAM4");
            }
            else {
                command.Parameters[3].Value = ((string)(PARAM4));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NOTICETableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public NOTICETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "NOTICE";
            tableMapping.ColumnMappings.Add("NOTICE_ID", "NOTICE_ID");
            tableMapping.ColumnMappings.Add("NOTICE_TITLE", "NOTICE_TITLE");
            tableMapping.ColumnMappings.Add("NOTICE_CONTENT", "NOTICE_CONTENT");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""S5532437"".""NOTICE"" WHERE ((""NOTICE_ID"" = :Original_NOTICE_ID) AND ((:IsNull_NOTICE_TITLE = 1 AND ""NOTICE_TITLE"" IS NULL) OR (""NOTICE_TITLE"" = :Original_NOTICE_TITLE)) AND ((:IsNull_NOTICE_CONTENT = 1 AND ""NOTICE_CONTENT"" IS NULL) OR (""NOTICE_CONTENT"" = :Original_NOTICE_CONTENT)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_NOTICE_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "NOTICE_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_NOTICE_TITLE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "NOTICE_TITLE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_NOTICE_TITLE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "NOTICE_TITLE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_NOTICE_CONTENT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 999;
            param.IsNullable = true;
            param.SourceColumn = "NOTICE_CONTENT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_NOTICE_CONTENT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 999;
            param.IsNullable = true;
            param.SourceColumn = "NOTICE_CONTENT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"S5532437\".\"NOTICE\" (\"NOTICE_ID\", \"NOTICE_TITLE\", \"NOTICE_CONTENT\") V" +
                "ALUES (:NOTICE_ID, :NOTICE_TITLE, :NOTICE_CONTENT)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "NOTICE_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "NOTICE_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "NOTICE_TITLE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "NOTICE_TITLE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "NOTICE_CONTENT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 999;
            param.IsNullable = true;
            param.SourceColumn = "NOTICE_CONTENT";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""S5532437"".""NOTICE"" SET ""NOTICE_ID"" = :NOTICE_ID, ""NOTICE_TITLE"" = :NOTICE_TITLE, ""NOTICE_CONTENT"" = :NOTICE_CONTENT WHERE ((""NOTICE_ID"" = :Original_NOTICE_ID) AND ((:IsNull_NOTICE_TITLE = 1 AND ""NOTICE_TITLE"" IS NULL) OR (""NOTICE_TITLE"" = :Original_NOTICE_TITLE)) AND ((:IsNull_NOTICE_CONTENT = 1 AND ""NOTICE_CONTENT"" IS NULL) OR (""NOTICE_CONTENT"" = :Original_NOTICE_CONTENT)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "NOTICE_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "NOTICE_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "NOTICE_TITLE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "NOTICE_TITLE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "NOTICE_CONTENT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 999;
            param.IsNullable = true;
            param.SourceColumn = "NOTICE_CONTENT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_NOTICE_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "NOTICE_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_NOTICE_TITLE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "NOTICE_TITLE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_NOTICE_TITLE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "NOTICE_TITLE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_NOTICE_CONTENT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 999;
            param.IsNullable = true;
            param.SourceColumn = "NOTICE_CONTENT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_NOTICE_CONTENT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 999;
            param.IsNullable = true;
            param.SourceColumn = "NOTICE_CONTENT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::DBP_FINAL_5532437.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[2];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT NOTICE_ID, NOTICE_TITLE, NOTICE_CONTENT FROM S5532437.NOTICE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT NOTICE_SEQ.nextval FROM dual";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.NOTICEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.NOTICEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.NOTICEDataTable dataTable = new DataSet1.NOTICEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.NOTICEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "NOTICE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_NOTICE_ID, string Original_NOTICE_TITLE, string Original_NOTICE_CONTENT) {
            if ((Original_NOTICE_ID == null)) {
                throw new global::System.ArgumentNullException("Original_NOTICE_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_NOTICE_ID));
            }
            if ((Original_NOTICE_TITLE == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_NOTICE_TITLE));
            }
            if ((Original_NOTICE_CONTENT == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_NOTICE_CONTENT));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string NOTICE_ID, string NOTICE_TITLE, string NOTICE_CONTENT) {
            if ((NOTICE_ID == null)) {
                throw new global::System.ArgumentNullException("NOTICE_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NOTICE_ID));
            }
            if ((NOTICE_TITLE == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NOTICE_TITLE));
            }
            if ((NOTICE_CONTENT == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(NOTICE_CONTENT));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NOTICE_ID, string NOTICE_TITLE, string NOTICE_CONTENT, string Original_NOTICE_ID, string Original_NOTICE_TITLE, string Original_NOTICE_CONTENT) {
            if ((NOTICE_ID == null)) {
                throw new global::System.ArgumentNullException("NOTICE_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NOTICE_ID));
            }
            if ((NOTICE_TITLE == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NOTICE_TITLE));
            }
            if ((NOTICE_CONTENT == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(NOTICE_CONTENT));
            }
            if ((Original_NOTICE_ID == null)) {
                throw new global::System.ArgumentNullException("Original_NOTICE_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_NOTICE_ID));
            }
            if ((Original_NOTICE_TITLE == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_NOTICE_TITLE));
            }
            if ((Original_NOTICE_CONTENT == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_NOTICE_CONTENT));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NOTICE_TITLE, string NOTICE_CONTENT, string Original_NOTICE_ID, string Original_NOTICE_TITLE, string Original_NOTICE_CONTENT) {
            return this.Update(Original_NOTICE_ID, NOTICE_TITLE, NOTICE_CONTENT, Original_NOTICE_ID, Original_NOTICE_TITLE, Original_NOTICE_CONTENT);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<decimal> FILLSEQ() {
            global::Oracle.ManagedDataAccess.Client.OracleCommand command = this.CommandCollection[1];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<decimal>();
            }
            else {
                return new global::System.Nullable<decimal>(((decimal)(returnValue)));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class STORETableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public STORETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "STORE";
            tableMapping.ColumnMappings.Add("STOR_NAME", "STOR_NAME");
            tableMapping.ColumnMappings.Add("TOTAL_SALE", "TOTAL_SALE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"S5532437\".\"STORE\" WHERE ((\"STOR_NAME\" = :Original_STOR_NAME) AND ((:" +
                "IsNull_TOTAL_SALE = 1 AND \"TOTAL_SALE\" IS NULL) OR (\"TOTAL_SALE\" = :Original_TOT" +
                "AL_SALE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_STOR_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "STOR_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TOTAL_SALE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTAL_SALE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TOTAL_SALE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTAL_SALE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"S5532437\".\"STORE\" (\"STOR_NAME\", \"TOTAL_SALE\") VALUES (:STOR_NAME, :T" +
                "OTAL_SALE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "STOR_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "STOR_NAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TOTAL_SALE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTAL_SALE";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"S5532437\".\"STORE\" SET \"STOR_NAME\" = :STOR_NAME, \"TOTAL_SALE\" = :TOTAL_SAL" +
                "E WHERE ((\"STOR_NAME\" = :Original_STOR_NAME) AND ((:IsNull_TOTAL_SALE = 1 AND \"T" +
                "OTAL_SALE\" IS NULL) OR (\"TOTAL_SALE\" = :Original_TOTAL_SALE)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "STOR_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "STOR_NAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TOTAL_SALE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTAL_SALE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_STOR_NAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "STOR_NAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TOTAL_SALE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTAL_SALE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TOTAL_SALE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTAL_SALE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::DBP_FINAL_5532437.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT STOR_NAME, TOTAL_SALE FROM S5532437.STORE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.STOREDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.STOREDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.STOREDataTable dataTable = new DataSet1.STOREDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.STOREDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "STORE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_STOR_NAME, global::System.Nullable<decimal> Original_TOTAL_SALE) {
            if ((Original_STOR_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_STOR_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_STOR_NAME));
            }
            if ((Original_TOTAL_SALE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_TOTAL_SALE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string STOR_NAME, global::System.Nullable<decimal> TOTAL_SALE) {
            if ((STOR_NAME == null)) {
                throw new global::System.ArgumentNullException("STOR_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(STOR_NAME));
            }
            if ((TOTAL_SALE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(TOTAL_SALE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string STOR_NAME, global::System.Nullable<decimal> TOTAL_SALE, string Original_STOR_NAME, global::System.Nullable<decimal> Original_TOTAL_SALE) {
            if ((STOR_NAME == null)) {
                throw new global::System.ArgumentNullException("STOR_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(STOR_NAME));
            }
            if ((TOTAL_SALE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(TOTAL_SALE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Original_STOR_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_STOR_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_STOR_NAME));
            }
            if ((Original_TOTAL_SALE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_TOTAL_SALE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<decimal> TOTAL_SALE, string Original_STOR_NAME, global::System.Nullable<decimal> Original_TOTAL_SALE) {
            return this.Update(Original_STOR_NAME, TOTAL_SALE, Original_STOR_NAME, Original_TOTAL_SALE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VIEW3TableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public VIEW3TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "VIEW3";
            tableMapping.ColumnMappings.Add("ORDER_ID", "ORDER_ID");
            tableMapping.ColumnMappings.Add("PROD_ID", "PROD_ID");
            tableMapping.ColumnMappings.Add("STOR_NAME", "STOR_NAME");
            tableMapping.ColumnMappings.Add("USER_ID", "USER_ID");
            tableMapping.ColumnMappings.Add("PROD_PRICE", "PROD_PRICE");
            tableMapping.ColumnMappings.Add("ORDER_DATE", "ORDER_DATE");
            tableMapping.ColumnMappings.Add("PROD_KIND", "PROD_KIND");
            tableMapping.ColumnMappings.Add("PROD_NAME", "PROD_NAME");
            tableMapping.ColumnMappings.Add("ORDER_OK", "ORDER_OK");
            tableMapping.ColumnMappings.Add("PROD_COUNT", "PROD_COUNT");
            tableMapping.ColumnMappings.Add("SELLER_ID", "SELLER_ID");
            tableMapping.ColumnMappings.Add("TOTAL_PRICE", "TOTAL_PRICE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::DBP_FINAL_5532437.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ORDER_ID, PROD_ID, STOR_NAME, USER_ID, PROD_PRICE, ORDER_DATE, PROD_KIND, " +
                "PROD_NAME, ORDER_OK, PROD_COUNT, SELLER_ID, TOTAL_PRICE FROM S5532437.VIEW3";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.VIEW3DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.VIEW3DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.VIEW3DataTable dataTable = new DataSet1.VIEW3DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NEWPRODTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public NEWPRODTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "NEWPROD";
            tableMapping.ColumnMappings.Add("PROD_ID", "PROD_ID");
            tableMapping.ColumnMappings.Add("ORDER_COUNT", "ORDER_COUNT");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::DBP_FINAL_5532437.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PROD_ID, ORDER_COUNT FROM S5532437.NEWPROD";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.NEWPRODDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.NEWPRODDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.NEWPRODDataTable dataTable = new DataSet1.NEWPRODDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PROD_REFUNDTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public PROD_REFUNDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PROD_REFUND";
            tableMapping.ColumnMappings.Add("PROD_ID", "PROD_ID");
            tableMapping.ColumnMappings.Add("REFUND_COUNT", "REFUND_COUNT");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::DBP_FINAL_5532437.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PROD_ID, REFUND_COUNT FROM S5532437.PROD_REFUND";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.PROD_REFUNDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.PROD_REFUNDDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.PROD_REFUNDDataTable dataTable = new DataSet1.PROD_REFUNDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ADMINTableAdapter _aDMINTableAdapter;
        
        private PRODUCTSTableAdapter _pRODUCTSTableAdapter;
        
        private REVIEWTableAdapter _rEVIEWTableAdapter;
        
        private SELLERTableAdapter _sELLERTableAdapter;
        
        private USERSTableAdapter _uSERSTableAdapter;
        
        private BASKETTableAdapter _bASKETTableAdapter;
        
        private ORDERD_PRODTableAdapter _oRDERD_PRODTableAdapter;
        
        private NOTICETableAdapter _nOTICETableAdapter;
        
        private STORETableAdapter _sTORETableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ADMINTableAdapter ADMINTableAdapter {
            get {
                return this._aDMINTableAdapter;
            }
            set {
                this._aDMINTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PRODUCTSTableAdapter PRODUCTSTableAdapter {
            get {
                return this._pRODUCTSTableAdapter;
            }
            set {
                this._pRODUCTSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public REVIEWTableAdapter REVIEWTableAdapter {
            get {
                return this._rEVIEWTableAdapter;
            }
            set {
                this._rEVIEWTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SELLERTableAdapter SELLERTableAdapter {
            get {
                return this._sELLERTableAdapter;
            }
            set {
                this._sELLERTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public USERSTableAdapter USERSTableAdapter {
            get {
                return this._uSERSTableAdapter;
            }
            set {
                this._uSERSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BASKETTableAdapter BASKETTableAdapter {
            get {
                return this._bASKETTableAdapter;
            }
            set {
                this._bASKETTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ORDERD_PRODTableAdapter ORDERD_PRODTableAdapter {
            get {
                return this._oRDERD_PRODTableAdapter;
            }
            set {
                this._oRDERD_PRODTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public NOTICETableAdapter NOTICETableAdapter {
            get {
                return this._nOTICETableAdapter;
            }
            set {
                this._nOTICETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public STORETableAdapter STORETableAdapter {
            get {
                return this._sTORETableAdapter;
            }
            set {
                this._sTORETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._aDMINTableAdapter != null) 
                            && (this._aDMINTableAdapter.Connection != null))) {
                    return this._aDMINTableAdapter.Connection;
                }
                if (((this._pRODUCTSTableAdapter != null) 
                            && (this._pRODUCTSTableAdapter.Connection != null))) {
                    return this._pRODUCTSTableAdapter.Connection;
                }
                if (((this._rEVIEWTableAdapter != null) 
                            && (this._rEVIEWTableAdapter.Connection != null))) {
                    return this._rEVIEWTableAdapter.Connection;
                }
                if (((this._sELLERTableAdapter != null) 
                            && (this._sELLERTableAdapter.Connection != null))) {
                    return this._sELLERTableAdapter.Connection;
                }
                if (((this._uSERSTableAdapter != null) 
                            && (this._uSERSTableAdapter.Connection != null))) {
                    return this._uSERSTableAdapter.Connection;
                }
                if (((this._bASKETTableAdapter != null) 
                            && (this._bASKETTableAdapter.Connection != null))) {
                    return this._bASKETTableAdapter.Connection;
                }
                if (((this._oRDERD_PRODTableAdapter != null) 
                            && (this._oRDERD_PRODTableAdapter.Connection != null))) {
                    return this._oRDERD_PRODTableAdapter.Connection;
                }
                if (((this._nOTICETableAdapter != null) 
                            && (this._nOTICETableAdapter.Connection != null))) {
                    return this._nOTICETableAdapter.Connection;
                }
                if (((this._sTORETableAdapter != null) 
                            && (this._sTORETableAdapter.Connection != null))) {
                    return this._sTORETableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._aDMINTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pRODUCTSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rEVIEWTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sELLERTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._uSERSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._bASKETTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._oRDERD_PRODTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._nOTICETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sTORETableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._pRODUCTSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PRODUCTS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pRODUCTSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._uSERSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.USERS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._uSERSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sTORETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.STORE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sTORETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._aDMINTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ADMIN.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._aDMINTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rEVIEWTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.REVIEW.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rEVIEWTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sELLERTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SELLER.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sELLERTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bASKETTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.BASKET.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bASKETTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._oRDERD_PRODTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ORDERD_PROD.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._oRDERD_PRODTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._nOTICETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.NOTICE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._nOTICETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._pRODUCTSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PRODUCTS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pRODUCTSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._uSERSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.USERS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._uSERSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sTORETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.STORE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sTORETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._aDMINTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ADMIN.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._aDMINTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rEVIEWTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.REVIEW.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rEVIEWTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sELLERTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SELLER.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sELLERTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bASKETTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.BASKET.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bASKETTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._oRDERD_PRODTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ORDERD_PROD.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._oRDERD_PRODTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._nOTICETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.NOTICE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._nOTICETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._nOTICETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.NOTICE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._nOTICETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._oRDERD_PRODTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ORDERD_PROD.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._oRDERD_PRODTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bASKETTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.BASKET.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bASKETTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sELLERTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SELLER.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sELLERTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._rEVIEWTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.REVIEW.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rEVIEWTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._aDMINTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ADMIN.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._aDMINTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sTORETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.STORE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sTORETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._uSERSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.USERS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._uSERSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pRODUCTSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PRODUCTS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pRODUCTSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(DataSet1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._aDMINTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._aDMINTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager에서 관리하는 모든 TableAdapter에는 동일한 연결 문자열을 사용해야 합니다.");
            }
            if (((this._pRODUCTSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pRODUCTSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager에서 관리하는 모든 TableAdapter에는 동일한 연결 문자열을 사용해야 합니다.");
            }
            if (((this._rEVIEWTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rEVIEWTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager에서 관리하는 모든 TableAdapter에는 동일한 연결 문자열을 사용해야 합니다.");
            }
            if (((this._sELLERTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sELLERTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager에서 관리하는 모든 TableAdapter에는 동일한 연결 문자열을 사용해야 합니다.");
            }
            if (((this._uSERSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._uSERSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager에서 관리하는 모든 TableAdapter에는 동일한 연결 문자열을 사용해야 합니다.");
            }
            if (((this._bASKETTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bASKETTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager에서 관리하는 모든 TableAdapter에는 동일한 연결 문자열을 사용해야 합니다.");
            }
            if (((this._oRDERD_PRODTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._oRDERD_PRODTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager에서 관리하는 모든 TableAdapter에는 동일한 연결 문자열을 사용해야 합니다.");
            }
            if (((this._nOTICETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._nOTICETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager에서 관리하는 모든 TableAdapter에는 동일한 연결 문자열을 사용해야 합니다.");
            }
            if (((this._sTORETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sTORETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager에서 관리하는 모든 TableAdapter에는 동일한 연결 문자열을 사용해야 합니다.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager에 연결 정보가 없습니다. 각 TableAdapterManager TableAdapter 속성을 올바른 Tabl" +
                        "eAdapter 인스턴스로 설정하십시오.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("트랜잭션을 시작할 수 없습니다. 현재 데이터 연결에서 트랜잭션이 지원되지 않거나 현재 상태에서 트랜잭션을 시작할 수 없습니다.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._aDMINTableAdapter != null)) {
                    revertConnections.Add(this._aDMINTableAdapter, this._aDMINTableAdapter.Connection);
                    this._aDMINTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._aDMINTableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._aDMINTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._aDMINTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._aDMINTableAdapter.Adapter);
                    }
                }
                if ((this._pRODUCTSTableAdapter != null)) {
                    revertConnections.Add(this._pRODUCTSTableAdapter, this._pRODUCTSTableAdapter.Connection);
                    this._pRODUCTSTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._pRODUCTSTableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._pRODUCTSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pRODUCTSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pRODUCTSTableAdapter.Adapter);
                    }
                }
                if ((this._rEVIEWTableAdapter != null)) {
                    revertConnections.Add(this._rEVIEWTableAdapter, this._rEVIEWTableAdapter.Connection);
                    this._rEVIEWTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._rEVIEWTableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._rEVIEWTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rEVIEWTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rEVIEWTableAdapter.Adapter);
                    }
                }
                if ((this._sELLERTableAdapter != null)) {
                    revertConnections.Add(this._sELLERTableAdapter, this._sELLERTableAdapter.Connection);
                    this._sELLERTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._sELLERTableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._sELLERTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sELLERTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sELLERTableAdapter.Adapter);
                    }
                }
                if ((this._uSERSTableAdapter != null)) {
                    revertConnections.Add(this._uSERSTableAdapter, this._uSERSTableAdapter.Connection);
                    this._uSERSTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._uSERSTableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._uSERSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._uSERSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._uSERSTableAdapter.Adapter);
                    }
                }
                if ((this._bASKETTableAdapter != null)) {
                    revertConnections.Add(this._bASKETTableAdapter, this._bASKETTableAdapter.Connection);
                    this._bASKETTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._bASKETTableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._bASKETTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bASKETTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bASKETTableAdapter.Adapter);
                    }
                }
                if ((this._oRDERD_PRODTableAdapter != null)) {
                    revertConnections.Add(this._oRDERD_PRODTableAdapter, this._oRDERD_PRODTableAdapter.Connection);
                    this._oRDERD_PRODTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._oRDERD_PRODTableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._oRDERD_PRODTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._oRDERD_PRODTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._oRDERD_PRODTableAdapter.Adapter);
                    }
                }
                if ((this._nOTICETableAdapter != null)) {
                    revertConnections.Add(this._nOTICETableAdapter, this._nOTICETableAdapter.Connection);
                    this._nOTICETableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._nOTICETableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._nOTICETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._nOTICETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._nOTICETableAdapter.Adapter);
                    }
                }
                if ((this._sTORETableAdapter != null)) {
                    revertConnections.Add(this._sTORETableAdapter, this._sTORETableAdapter.Connection);
                    this._sTORETableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._sTORETableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._sTORETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sTORETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sTORETableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._aDMINTableAdapter != null)) {
                    this._aDMINTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._aDMINTableAdapter]));
                    this._aDMINTableAdapter.Transaction = null;
                }
                if ((this._pRODUCTSTableAdapter != null)) {
                    this._pRODUCTSTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._pRODUCTSTableAdapter]));
                    this._pRODUCTSTableAdapter.Transaction = null;
                }
                if ((this._rEVIEWTableAdapter != null)) {
                    this._rEVIEWTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._rEVIEWTableAdapter]));
                    this._rEVIEWTableAdapter.Transaction = null;
                }
                if ((this._sELLERTableAdapter != null)) {
                    this._sELLERTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._sELLERTableAdapter]));
                    this._sELLERTableAdapter.Transaction = null;
                }
                if ((this._uSERSTableAdapter != null)) {
                    this._uSERSTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._uSERSTableAdapter]));
                    this._uSERSTableAdapter.Transaction = null;
                }
                if ((this._bASKETTableAdapter != null)) {
                    this._bASKETTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._bASKETTableAdapter]));
                    this._bASKETTableAdapter.Transaction = null;
                }
                if ((this._oRDERD_PRODTableAdapter != null)) {
                    this._oRDERD_PRODTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._oRDERD_PRODTableAdapter]));
                    this._oRDERD_PRODTableAdapter.Transaction = null;
                }
                if ((this._nOTICETableAdapter != null)) {
                    this._nOTICETableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._nOTICETableAdapter]));
                    this._nOTICETableAdapter.Transaction = null;
                }
                if ((this._sTORETableAdapter != null)) {
                    this._sTORETableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._sTORETableAdapter]));
                    this._sTORETableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591